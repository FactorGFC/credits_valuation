{"version":3,"file":"ngx-bootstrap-alert.mjs","sources":["../../../../src/alert/alert.config.ts","../../../../src/alert/alert.component.ts","../../../../src/alert/alert.component.html","../../../../src/alert/alert.module.ts","../../../../src/alert/ngx-bootstrap-alert.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertConfig {\n  /** default alert type */\n  type = 'warning';\n\n  /** is alerts are dismissible by default */\n  dismissible = false;\n\n  /** default time before alert will dismiss */\n  dismissOnTimeout?: number = undefined;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { AlertConfig } from './alert.config';\nimport { OnChange } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'alert,bs-alert',\n  templateUrl: './alert.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertComponent implements OnInit {\n  /** Alert type.\n   * Provides one of four bootstrap supported contextual classes:\n   * `success`, `info`, `warning` and `danger`\n   */\n  @Input() type = 'warning';\n  /** If set, displays an inline \"Close\" button */\n  @OnChange()   @Input()   dismissible = false;\n  /** Number in milliseconds, after which alert will be closed */\n  @Input() dismissOnTimeout?: number | string;\n\n  /** Is alert visible */\n  @Input() isOpen = true;\n\n  /** This event fires immediately after close instance method is called,\n   * $event is an instance of Alert component.\n   */\n  @Output() onClose = new EventEmitter<AlertComponent>();\n  /** This event fires when alert closed, $event is an instance of Alert component */\n  @Output() onClosed = new EventEmitter<AlertComponent>();\n\n\n  classes = '';\n  dismissibleChange = new EventEmitter<boolean>();\n\n  constructor(_config: AlertConfig, private changeDetection: ChangeDetectorRef) {\n    Object.assign(this, _config);\n    this.dismissibleChange.subscribe((/*dismissible: boolean*/) => {\n      this.classes = this.dismissible ? 'alert-dismissible' : '';\n      this.changeDetection.markForCheck();\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.dismissOnTimeout) {\n      // if dismissOnTimeout used as attr without binding, it will be a string\n      setTimeout(\n        () => this.close(),\n        parseInt(this.dismissOnTimeout as string, 10)\n      );\n    }\n  }\n\n  // todo: animation ` If the .fade and .in classes are present on the element,\n  // the alert will fade out before it is removed`\n  /**\n   * Closes an alert by removing it from the DOM.\n   */\n  close(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.onClose.emit(this);\n    this.isOpen = false;\n    this.changeDetection.markForCheck();\n    this.onClosed.emit(this);\n  }\n}\n","<ng-template [ngIf]=\"isOpen\">\n  <div [class]=\"'alert alert-' + type\" role=\"alert\" [ngClass]=\"classes\">\n    <ng-template [ngIf]=\"dismissible\">\n      <button type=\"button\" class=\"close btn-close\" aria-label=\"Close\" (click)=\"close()\">\n        <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n        <span class=\"sr-only visually-hidden\">Close</span>\n      </button>\n    </ng-template>\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AlertComponent } from './alert.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AlertComponent],\n  exports: [AlertComponent],\n  entryComponents: [AlertComponent]\n})\nexport class AlertModule {\n  static forRoot(): ModuleWithProviders<AlertModule> {\n    return { ngModule: AlertModule, providers: [] };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;MAKa,WAAW;IAHxB;;QAKE,SAAI,GAAG,SAAS,CAAC;;QAGjB,gBAAW,GAAG,KAAK,CAAC;;QAGpB,qBAAgB,GAAY,SAAS,CAAC;KACvC;;wGATY,WAAW;4GAAX,WAAW,cAFV,MAAM;2FAEP,WAAW;kBAHvB,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCaY,cAAc;IAyBzB,YAAY,OAAoB,EAAU,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;;;;;QApBnE,SAAI,GAAG,SAAS,CAAC;;QAED,gBAAW,GAAG,KAAK,CAAC;;QAKpC,WAAM,GAAG,IAAI,CAAC;;;;QAKb,YAAO,GAAG,IAAI,YAAY,EAAkB,CAAC;;QAE7C,aAAQ,GAAG,IAAI,YAAY,EAAkB,CAAC;QAGxD,YAAO,GAAG,EAAE,CAAC;QACb,sBAAiB,GAAG,IAAI,YAAY,EAAW,CAAC;QAG9C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,GAAG,mBAAmB,GAAG,EAAE,CAAC;YAC3D,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;SACrC,CAAC,CAAC;KACJ;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,gBAAgB,EAAE;;YAEzB,UAAU,CACR,MAAM,IAAI,CAAC,KAAK,EAAE,EAClB,QAAQ,CAAC,IAAI,CAAC,gBAA0B,EAAE,EAAE,CAAC,CAC9C,CAAC;SACH;KACF;;;;;;IAOD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;;2GAzDU,cAAc;+FAAd,cAAc,2NCjB3B,yeAWA;ADa2B;IAAxB,QAAQ,EAAE;;mDAAkC;2FAPlC,cAAc;kBAL1B,SAAS;+BACE,gBAAgB,mBAET,uBAAuB,CAAC,MAAM;+HAOtC,IAAI;sBAAZ,KAAK;gBAEmB,WAAW;sBAArB,KAAK;gBAEX,gBAAgB;sBAAxB,KAAK;gBAGG,MAAM;sBAAd,KAAK;gBAKI,OAAO;sBAAhB,MAAM;gBAEG,QAAQ;sBAAjB,MAAM;;;ME1BI,WAAW;IACtB,OAAO,OAAO;QACZ,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;KACjD;;wGAHU,WAAW;yGAAX,WAAW,iBAJP,cAAc,aADnB,YAAY,aAEZ,cAAc;yGAGb,WAAW,YALb,CAAC,YAAY,CAAC;2FAKZ,WAAW;kBANvB,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,cAAc,CAAC;oBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;oBACzB,eAAe,EAAE,CAAC,cAAc,CAAC;iBAClC;;;ACTD;;;;;;"}