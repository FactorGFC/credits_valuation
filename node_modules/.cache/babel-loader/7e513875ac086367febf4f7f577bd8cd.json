{"ast":null,"code":"/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.4\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Popper = factory();\n})(this, function () {\n  'use strict';\n\n  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  var timeoutDuration = 0;\n\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      timeoutDuration = 1;\n      break;\n    }\n  }\n\n  function microtaskDebounce(fn) {\n    var called = false;\n    return function () {\n      if (called) {\n        return;\n      }\n\n      called = true;\n      window.Promise.resolve().then(function () {\n        called = false;\n        fn();\n      });\n    };\n  }\n\n  function taskDebounce(fn) {\n    var scheduled = false;\n    return function () {\n      if (!scheduled) {\n        scheduled = true;\n        setTimeout(function () {\n          scheduled = false;\n          fn();\n        }, timeoutDuration);\n      }\n    };\n  }\n\n  var supportsMicroTasks = isBrowser && window.Promise;\n  /**\n   * Create a debounced version of a method, that's asynchronously deferred\n   * but called in the minimum time possible.\n   *\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Function} fn\n   * @returns {Function}\n   */\n\n  var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n  /**\n   * Check if the given variable is a function\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Any} functionToCheck - variable to check\n   * @returns {Boolean} answer to: is a function?\n   */\n\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n  }\n  /**\n   * Get CSS computed property of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Eement} element\n   * @argument {String} property\n   */\n\n\n  function getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n      return [];\n    } // NOTE: 1 DOM access here\n\n\n    var css = getComputedStyle(element, null);\n    return property ? css[property] : css;\n  }\n  /**\n   * Returns the parentNode or the host of the element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} parent\n   */\n\n\n  function getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n      return element;\n    }\n\n    return element.parentNode || element.host;\n  }\n  /**\n   * Returns the scrolling parent of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} scroll parent\n   */\n\n\n  function getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element) {\n      return document.body;\n    }\n\n    switch (element.nodeName) {\n      case 'HTML':\n      case 'BODY':\n        return element.ownerDocument.body;\n\n      case '#document':\n        return element.body;\n    } // Firefox want us to check `-x` and `-y` variations as well\n\n\n    var _getStyleComputedProp = getStyleComputedProperty(element),\n        overflow = _getStyleComputedProp.overflow,\n        overflowX = _getStyleComputedProp.overflowX,\n        overflowY = _getStyleComputedProp.overflowY;\n\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n      return element;\n    }\n\n    return getScrollParent(getParentNode(element));\n  }\n\n  var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\n  var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n  /**\n   * Determines if the browser is Internet Explorer\n   * @method\n   * @memberof Popper.Utils\n   * @param {Number} version to check\n   * @returns {Boolean} isIE\n   */\n\n  function isIE(version) {\n    if (version === 11) {\n      return isIE11;\n    }\n\n    if (version === 10) {\n      return isIE10;\n    }\n\n    return isIE11 || isIE10;\n  }\n  /**\n   * Returns the offset parent of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} offset parent\n   */\n\n\n  function getOffsetParent(element) {\n    if (!element) {\n      return document.documentElement;\n    }\n\n    var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here\n\n    var offsetParent = element.offsetParent; // Skip hidden elements which don't have an offsetParent\n\n    while (offsetParent === noOffsetParent && element.nextElementSibling) {\n      offsetParent = (element = element.nextElementSibling).offsetParent;\n    }\n\n    var nodeName = offsetParent && offsetParent.nodeName;\n\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n      return element ? element.ownerDocument.documentElement : document.documentElement;\n    } // .offsetParent will return the closest TD or TABLE in case\n    // no offsetParent is present, I hate this job...\n\n\n    if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n      return getOffsetParent(offsetParent);\n    }\n\n    return offsetParent;\n  }\n\n  function isOffsetContainer(element) {\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY') {\n      return false;\n    }\n\n    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n  }\n  /**\n   * Finds the root node (document, shadowDOM root) of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} node\n   * @returns {Element} root node\n   */\n\n\n  function getRoot(node) {\n    if (node.parentNode !== null) {\n      return getRoot(node.parentNode);\n    }\n\n    return node;\n  }\n  /**\n   * Finds the offset parent common to the two provided nodes\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element1\n   * @argument {Element} element2\n   * @returns {Element} common offset parent\n   */\n\n\n  function findCommonOffsetParent(element1, element2) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n      return document.documentElement;\n    } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n\n    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n    var start = order ? element1 : element2;\n    var end = order ? element2 : element1; // Get common ancestor container\n\n    var range = document.createRange();\n    range.setStart(start, 0);\n    range.setEnd(end, 0);\n    var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document\n\n    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n      if (isOffsetContainer(commonAncestorContainer)) {\n        return commonAncestorContainer;\n      }\n\n      return getOffsetParent(commonAncestorContainer);\n    } // one of the nodes is inside shadowDOM, find which one\n\n\n    var element1root = getRoot(element1);\n\n    if (element1root.host) {\n      return findCommonOffsetParent(element1root.host, element2);\n    } else {\n      return findCommonOffsetParent(element1, getRoot(element2).host);\n    }\n  }\n  /**\n   * Gets the scroll value of the given element in the given side (top and left)\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @argument {String} side `top` or `left`\n   * @returns {number} amount of scrolled pixels\n   */\n\n\n  function getScroll(element) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      var html = element.ownerDocument.documentElement;\n      var scrollingElement = element.ownerDocument.scrollingElement || html;\n      return scrollingElement[upperSide];\n    }\n\n    return element[upperSide];\n  }\n  /*\n   * Sum or subtract the element scroll values (left and top) from a given rect object\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} rect - Rect object you want to change\n   * @param {HTMLElement} element - The element from the function reads the scroll values\n   * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n   * @return {Object} rect - The modifier rect object\n   */\n\n\n  function includeScroll(rect, element) {\n    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var scrollTop = getScroll(element, 'top');\n    var scrollLeft = getScroll(element, 'left');\n    var modifier = subtract ? -1 : 1;\n    rect.top += scrollTop * modifier;\n    rect.bottom += scrollTop * modifier;\n    rect.left += scrollLeft * modifier;\n    rect.right += scrollLeft * modifier;\n    return rect;\n  }\n  /*\n   * Helper to detect borders of a given element\n   * @method\n   * @memberof Popper.Utils\n   * @param {CSSStyleDeclaration} styles\n   * Result of `getStyleComputedProperty` on the given element\n   * @param {String} axis - `x` or `y`\n   * @return {number} borders - The borders size of the given axis\n   */\n\n\n  function getBordersSize(styles, axis) {\n    var sideA = axis === 'x' ? 'Left' : 'Top';\n    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n    return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n  }\n\n  function getSize(axis, body, html, computedStyle) {\n    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n  }\n\n  function getWindowSizes(document) {\n    var body = document.body;\n    var html = document.documentElement;\n    var computedStyle = isIE(10) && getComputedStyle(html);\n    return {\n      height: getSize('Height', body, html, computedStyle),\n      width: getSize('Width', body, html, computedStyle)\n    };\n  }\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var defineProperty = function defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  /**\n   * Given element offsets, generate an output similar to getBoundingClientRect\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Object} offsets\n   * @returns {Object} ClientRect like output\n   */\n\n\n  function getClientRect(offsets) {\n    return _extends({}, offsets, {\n      right: offsets.left + offsets.width,\n      bottom: offsets.top + offsets.height\n    });\n  }\n  /**\n   * Get bounding client rect of given element\n   * @method\n   * @memberof Popper.Utils\n   * @param {HTMLElement} element\n   * @return {Object} client rect\n   */\n\n\n  function getBoundingClientRect(element) {\n    var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n\n    try {\n      if (isIE(10)) {\n        rect = element.getBoundingClientRect();\n        var scrollTop = getScroll(element, 'top');\n        var scrollLeft = getScroll(element, 'left');\n        rect.top += scrollTop;\n        rect.left += scrollLeft;\n        rect.bottom += scrollTop;\n        rect.right += scrollLeft;\n      } else {\n        rect = element.getBoundingClientRect();\n      }\n    } catch (e) {}\n\n    var result = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    }; // subtract scrollbar size from sizes\n\n    var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n    var width = sizes.width || element.clientWidth || result.right - result.left;\n    var height = sizes.height || element.clientHeight || result.bottom - result.top;\n    var horizScrollbar = element.offsetWidth - width;\n    var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n\n    if (horizScrollbar || vertScrollbar) {\n      var styles = getStyleComputedProperty(element);\n      horizScrollbar -= getBordersSize(styles, 'x');\n      vertScrollbar -= getBordersSize(styles, 'y');\n      result.width -= horizScrollbar;\n      result.height -= vertScrollbar;\n    }\n\n    return getClientRect(result);\n  }\n\n  function getOffsetRectRelativeToArbitraryNode(children, parent) {\n    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var isIE10 = isIE(10);\n    var isHTML = parent.nodeName === 'HTML';\n    var childrenRect = getBoundingClientRect(children);\n    var parentRect = getBoundingClientRect(parent);\n    var scrollParent = getScrollParent(children);\n    var styles = getStyleComputedProperty(parent);\n    var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n    var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n    if (fixedPosition && isHTML) {\n      parentRect.top = Math.max(parentRect.top, 0);\n      parentRect.left = Math.max(parentRect.left, 0);\n    }\n\n    var offsets = getClientRect({\n      top: childrenRect.top - parentRect.top - borderTopWidth,\n      left: childrenRect.left - parentRect.left - borderLeftWidth,\n      width: childrenRect.width,\n      height: childrenRect.height\n    });\n    offsets.marginTop = 0;\n    offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n    // we do this only on HTML because it's the only element that behaves\n    // differently when margins are applied to it. The margins are included in\n    // the box of the documentElement, in the other cases not.\n\n    if (!isIE10 && isHTML) {\n      var marginTop = parseFloat(styles.marginTop, 10);\n      var marginLeft = parseFloat(styles.marginLeft, 10);\n      offsets.top -= borderTopWidth - marginTop;\n      offsets.bottom -= borderTopWidth - marginTop;\n      offsets.left -= borderLeftWidth - marginLeft;\n      offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them\n\n      offsets.marginTop = marginTop;\n      offsets.marginLeft = marginLeft;\n    }\n\n    if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n      offsets = includeScroll(offsets, parent);\n    }\n\n    return offsets;\n  }\n\n  function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var html = element.ownerDocument.documentElement;\n    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n    var width = Math.max(html.clientWidth, window.innerWidth || 0);\n    var height = Math.max(html.clientHeight, window.innerHeight || 0);\n    var scrollTop = !excludeScroll ? getScroll(html) : 0;\n    var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n    var offset = {\n      top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n      left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n      width: width,\n      height: height\n    };\n    return getClientRect(offset);\n  }\n  /**\n   * Check if the given element is fixed or is inside a fixed parent\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @argument {Element} customContainer\n   * @returns {Boolean} answer to \"isFixed?\"\n   */\n\n\n  function isFixed(element) {\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      return false;\n    }\n\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n      return true;\n    }\n\n    return isFixed(getParentNode(element));\n  }\n  /**\n   * Finds the first parent of an element that has a transformed property defined\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} first transformed parent or documentElement\n   */\n\n\n  function getFixedPositionOffsetParent(element) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element || !element.parentElement || isIE()) {\n      return document.documentElement;\n    }\n\n    var el = element.parentElement;\n\n    while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n      el = el.parentElement;\n    }\n\n    return el || document.documentElement;\n  }\n  /**\n   * Computed the boundaries limits and return them\n   * @method\n   * @memberof Popper.Utils\n   * @param {HTMLElement} popper\n   * @param {HTMLElement} reference\n   * @param {number} padding\n   * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n   * @param {Boolean} fixedPosition - Is in fixed position mode\n   * @returns {Object} Coordinates of the boundaries\n   */\n\n\n  function getBoundaries(popper, reference, padding, boundariesElement) {\n    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here\n\n    var boundaries = {\n      top: 0,\n      left: 0\n    };\n    var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference); // Handle viewport case\n\n    if (boundariesElement === 'viewport') {\n      boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n    } else {\n      // Handle other cases based on DOM element used as boundaries\n      var boundariesNode = void 0;\n\n      if (boundariesElement === 'scrollParent') {\n        boundariesNode = getScrollParent(getParentNode(reference));\n\n        if (boundariesNode.nodeName === 'BODY') {\n          boundariesNode = popper.ownerDocument.documentElement;\n        }\n      } else if (boundariesElement === 'window') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      } else {\n        boundariesNode = boundariesElement;\n      }\n\n      var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n      if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n        var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n            height = _getWindowSizes.height,\n            width = _getWindowSizes.width;\n\n        boundaries.top += offsets.top - offsets.marginTop;\n        boundaries.bottom = height + offsets.top;\n        boundaries.left += offsets.left - offsets.marginLeft;\n        boundaries.right = width + offsets.left;\n      } else {\n        // for all the other DOM elements, this one is good\n        boundaries = offsets;\n      }\n    } // Add paddings\n\n\n    padding = padding || 0;\n    var isPaddingNumber = typeof padding === 'number';\n    boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n    boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n    boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n    boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n    return boundaries;\n  }\n\n  function getArea(_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return width * height;\n  }\n  /**\n   * Utility used to transform the `auto` placement to the placement with more\n   * available space.\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    if (placement.indexOf('auto') === -1) {\n      return placement;\n    }\n\n    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n    var rects = {\n      top: {\n        width: boundaries.width,\n        height: refRect.top - boundaries.top\n      },\n      right: {\n        width: boundaries.right - refRect.right,\n        height: boundaries.height\n      },\n      bottom: {\n        width: boundaries.width,\n        height: boundaries.bottom - refRect.bottom\n      },\n      left: {\n        width: refRect.left - boundaries.left,\n        height: boundaries.height\n      }\n    };\n    var sortedAreas = Object.keys(rects).map(function (key) {\n      return _extends({\n        key: key\n      }, rects[key], {\n        area: getArea(rects[key])\n      });\n    }).sort(function (a, b) {\n      return b.area - a.area;\n    });\n    var filteredAreas = sortedAreas.filter(function (_ref2) {\n      var width = _ref2.width,\n          height = _ref2.height;\n      return width >= popper.clientWidth && height >= popper.clientHeight;\n    });\n    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n    var variation = placement.split('-')[1];\n    return computedPlacement + (variation ? '-' + variation : '');\n  }\n  /**\n   * Get offsets to the reference element\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} state\n   * @param {Element} popper - the popper element\n   * @param {Element} reference - the reference element (the popper will be relative to this)\n   * @param {Element} fixedPosition - is in fixed position mode\n   * @returns {Object} An object containing the offsets which will be applied to the popper\n   */\n\n\n  function getReferenceOffsets(state, popper, reference) {\n    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n  }\n  /**\n   * Get the outer sizes of the given element (offset size + margins)\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Object} object containing width and height properties\n   */\n\n\n  function getOuterSizes(element) {\n    var styles = getComputedStyle(element);\n    var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n    var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n    var result = {\n      width: element.offsetWidth + y,\n      height: element.offsetHeight + x\n    };\n    return result;\n  }\n  /**\n   * Get the opposite placement of the given one\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement\n   * @returns {String} flipped placement\n   */\n\n\n  function getOppositePlacement(placement) {\n    var hash = {\n      left: 'right',\n      right: 'left',\n      bottom: 'top',\n      top: 'bottom'\n    };\n    return placement.replace(/left|right|bottom|top/g, function (matched) {\n      return hash[matched];\n    });\n  }\n  /**\n   * Get offsets to the popper\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} position - CSS position the Popper will get applied\n   * @param {HTMLElement} popper - the popper element\n   * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n   * @param {String} placement - one of the valid placement options\n   * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n   */\n\n\n  function getPopperOffsets(popper, referenceOffsets, placement) {\n    placement = placement.split('-')[0]; // Get popper node sizes\n\n    var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object\n\n    var popperOffsets = {\n      width: popperRect.width,\n      height: popperRect.height\n    }; // depending by the popper placement we have to compute its offsets slightly differently\n\n    var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    var mainSide = isHoriz ? 'top' : 'left';\n    var secondarySide = isHoriz ? 'left' : 'top';\n    var measurement = isHoriz ? 'height' : 'width';\n    var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n\n    if (placement === secondarySide) {\n      popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n    } else {\n      popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n    }\n\n    return popperOffsets;\n  }\n  /**\n   * Mimics the `find` method of Array\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Array} arr\n   * @argument prop\n   * @argument value\n   * @returns index or -1\n   */\n\n\n  function find(arr, check) {\n    // use native find if supported\n    if (Array.prototype.find) {\n      return arr.find(check);\n    } // use `filter` to obtain the same behavior of `find`\n\n\n    return arr.filter(check)[0];\n  }\n  /**\n   * Return the index of the matching object\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Array} arr\n   * @argument prop\n   * @argument value\n   * @returns index or -1\n   */\n\n\n  function findIndex(arr, prop, value) {\n    // use native findIndex if supported\n    if (Array.prototype.findIndex) {\n      return arr.findIndex(function (cur) {\n        return cur[prop] === value;\n      });\n    } // use `find` + `indexOf` if `findIndex` isn't supported\n\n\n    var match = find(arr, function (obj) {\n      return obj[prop] === value;\n    });\n    return arr.indexOf(match);\n  }\n  /**\n   * Loop trough the list of modifiers and run them in order,\n   * each of them will then edit the data object.\n   * @method\n   * @memberof Popper.Utils\n   * @param {dataObject} data\n   * @param {Array} modifiers\n   * @param {String} ends - Optional modifier name used as stopper\n   * @returns {dataObject}\n   */\n\n\n  function runModifiers(modifiers, data, ends) {\n    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n    modifiersToRun.forEach(function (modifier) {\n      if (modifier['function']) {\n        // eslint-disable-line dot-notation\n        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n      }\n\n      var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n\n      if (modifier.enabled && isFunction(fn)) {\n        // Add properties to offsets to make them a complete clientRect object\n        // we do this before each modifier to make sure the previous one doesn't\n        // mess with these values\n        data.offsets.popper = getClientRect(data.offsets.popper);\n        data.offsets.reference = getClientRect(data.offsets.reference);\n        data = fn(data, modifier);\n      }\n    });\n    return data;\n  }\n  /**\n   * Updates the position of the popper, computing the new offsets and applying\n   * the new style.<br />\n   * Prefer `scheduleUpdate` over `update` because of performance reasons.\n   * @method\n   * @memberof Popper\n   */\n\n\n  function update() {\n    // if popper is destroyed, don't perform any further update\n    if (this.state.isDestroyed) {\n      return;\n    }\n\n    var data = {\n      instance: this,\n      styles: {},\n      arrowStyles: {},\n      attributes: {},\n      flipped: false,\n      offsets: {}\n    }; // compute reference element offsets\n\n    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n\n    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`\n\n    data.originalPlacement = data.placement;\n    data.positionFixed = this.options.positionFixed; // compute the popper offsets\n\n    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n    data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers\n\n    data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback\n    // the other ones will call `onUpdate` callback\n\n    if (!this.state.isCreated) {\n      this.state.isCreated = true;\n      this.options.onCreate(data);\n    } else {\n      this.options.onUpdate(data);\n    }\n  }\n  /**\n   * Helper used to know if the given modifier is enabled.\n   * @method\n   * @memberof Popper.Utils\n   * @returns {Boolean}\n   */\n\n\n  function isModifierEnabled(modifiers, modifierName) {\n    return modifiers.some(function (_ref) {\n      var name = _ref.name,\n          enabled = _ref.enabled;\n      return enabled && name === modifierName;\n    });\n  }\n  /**\n   * Get the prefixed supported property name\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} property (camelCase)\n   * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n   */\n\n\n  function getSupportedPropertyName(property) {\n    var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n    for (var i = 0; i < prefixes.length; i++) {\n      var prefix = prefixes[i];\n      var toCheck = prefix ? '' + prefix + upperProp : property;\n\n      if (typeof document.body.style[toCheck] !== 'undefined') {\n        return toCheck;\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Destroys the popper.\n   * @method\n   * @memberof Popper\n   */\n\n\n  function destroy() {\n    this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled\n\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n      this.popper.removeAttribute('x-placement');\n      this.popper.style.position = '';\n      this.popper.style.top = '';\n      this.popper.style.left = '';\n      this.popper.style.right = '';\n      this.popper.style.bottom = '';\n      this.popper.style.willChange = '';\n      this.popper.style[getSupportedPropertyName('transform')] = '';\n    }\n\n    this.disableEventListeners(); // remove the popper if user explicity asked for the deletion on destroy\n    // do not use `remove` because IE11 doesn't support it\n\n    if (this.options.removeOnDestroy) {\n      this.popper.parentNode.removeChild(this.popper);\n    }\n\n    return this;\n  }\n  /**\n   * Get the window associated with the element\n   * @argument {Element} element\n   * @returns {Window}\n   */\n\n\n  function getWindow(element) {\n    var ownerDocument = element.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  function attachToScrollParents(scrollParent, event, callback, scrollParents) {\n    var isBody = scrollParent.nodeName === 'BODY';\n    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n    target.addEventListener(event, callback, {\n      passive: true\n    });\n\n    if (!isBody) {\n      attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n    }\n\n    scrollParents.push(target);\n  }\n  /**\n   * Setup needed event listeners used to update the popper position\n   * @method\n   * @memberof Popper.Utils\n   * @private\n   */\n\n\n  function setupEventListeners(reference, options, state, updateBound) {\n    // Resize event listener on window\n    state.updateBound = updateBound;\n    getWindow(reference).addEventListener('resize', state.updateBound, {\n      passive: true\n    }); // Scroll event listener on scroll parents\n\n    var scrollElement = getScrollParent(reference);\n    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n    state.scrollElement = scrollElement;\n    state.eventsEnabled = true;\n    return state;\n  }\n  /**\n   * It will add resize/scroll events and start recalculating\n   * position of the popper element when they are triggered.\n   * @method\n   * @memberof Popper\n   */\n\n\n  function enableEventListeners() {\n    if (!this.state.eventsEnabled) {\n      this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n    }\n  }\n  /**\n   * Remove event listeners used to update the popper position\n   * @method\n   * @memberof Popper.Utils\n   * @private\n   */\n\n\n  function removeEventListeners(reference, state) {\n    // Remove resize event listener on window\n    getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents\n\n    state.scrollParents.forEach(function (target) {\n      target.removeEventListener('scroll', state.updateBound);\n    }); // Reset state\n\n    state.updateBound = null;\n    state.scrollParents = [];\n    state.scrollElement = null;\n    state.eventsEnabled = false;\n    return state;\n  }\n  /**\n   * It will remove resize/scroll events and won't recalculate popper position\n   * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n   * unless you call `update` method manually.\n   * @method\n   * @memberof Popper\n   */\n\n\n  function disableEventListeners() {\n    if (this.state.eventsEnabled) {\n      cancelAnimationFrame(this.scheduleUpdate);\n      this.state = removeEventListeners(this.reference, this.state);\n    }\n  }\n  /**\n   * Tells if a given input is a number\n   * @method\n   * @memberof Popper.Utils\n   * @param {*} input to check\n   * @return {Boolean}\n   */\n\n\n  function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  /**\n   * Set the style to the given popper\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element - Element to apply the style to\n   * @argument {Object} styles\n   * Object with a list of properties and values which will be applied to the element\n   */\n\n\n  function setStyles(element, styles) {\n    Object.keys(styles).forEach(function (prop) {\n      var unit = ''; // add unit if the value is numeric and is one of the following\n\n      if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n        unit = 'px';\n      }\n\n      element.style[prop] = styles[prop] + unit;\n    });\n  }\n  /**\n   * Set the attributes to the given popper\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element - Element to apply the attributes to\n   * @argument {Object} styles\n   * Object with a list of properties and values which will be applied to the element\n   */\n\n\n  function setAttributes(element, attributes) {\n    Object.keys(attributes).forEach(function (prop) {\n      var value = attributes[prop];\n\n      if (value !== false) {\n        element.setAttribute(prop, attributes[prop]);\n      } else {\n        element.removeAttribute(prop);\n      }\n    });\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} data.styles - List of style properties - values to apply to popper element\n   * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The same data object\n   */\n\n\n  function applyStyle(data) {\n    // any property present in `data.styles` will be applied to the popper,\n    // in this way we can make the 3rd party modifiers add custom styles to it\n    // Be aware, modifiers could override the properties defined in the previous\n    // lines of this modifier!\n    setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,\n    // they will be set as HTML attributes of the element\n\n    setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties\n\n    if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n      setStyles(data.arrowElement, data.arrowStyles);\n    }\n\n    return data;\n  }\n  /**\n   * Set the x-placement attribute before everything else because it could be used\n   * to add margins to the popper margins needs to be calculated to get the\n   * correct popper offsets.\n   * @method\n   * @memberof Popper.modifiers\n   * @param {HTMLElement} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper\n   * @param {Object} options - Popper.js options\n   */\n\n\n  function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n    // compute reference element offsets\n    var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n\n    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n    popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because\n    // without the position applied we can't guarantee correct computations\n\n    setStyles(popper, {\n      position: options.positionFixed ? 'fixed' : 'absolute'\n    });\n    return options;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function computeStyle(data, options) {\n    var x = options.x,\n        y = options.y;\n    var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2\n\n    var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'applyStyle';\n    }).gpuAcceleration;\n\n    if (legacyGpuAccelerationOption !== undefined) {\n      console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n    }\n\n    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n    var offsetParent = getOffsetParent(data.instance.popper);\n    var offsetParentRect = getBoundingClientRect(offsetParent); // Styles\n\n    var styles = {\n      position: popper.position\n    }; // Avoid blurry text by using full pixel integers.\n    // For pixel-perfect positioning, top/bottom prefers rounded\n    // values, while left/right prefers floored values.\n\n    var offsets = {\n      left: Math.floor(popper.left),\n      top: Math.round(popper.top),\n      bottom: Math.round(popper.bottom),\n      right: Math.floor(popper.right)\n    };\n    var sideA = x === 'bottom' ? 'top' : 'bottom';\n    var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,\n    //  we use `translate3d` to apply the position to the popper we\n    // automatically use the supported prefixed version if needed\n\n    var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)\n    // If the content of the popper grows once it's been positioned, it\n    // may happen that the popper gets misplaced because of the new content\n    // overflowing its reference element\n    // To avoid this problem, we provide two options (x and y), which allow\n    // the consumer to define the offset origin.\n    // If we position a popper on top of a reference element, we can set\n    // `x` to `top` to make the popper grow towards its top instead of\n    // its bottom.\n\n    var left = void 0,\n        top = void 0;\n\n    if (sideA === 'bottom') {\n      // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n      // and not the bottom of the html element\n      if (offsetParent.nodeName === 'HTML') {\n        top = -offsetParent.clientHeight + offsets.bottom;\n      } else {\n        top = -offsetParentRect.height + offsets.bottom;\n      }\n    } else {\n      top = offsets.top;\n    }\n\n    if (sideB === 'right') {\n      if (offsetParent.nodeName === 'HTML') {\n        left = -offsetParent.clientWidth + offsets.right;\n      } else {\n        left = -offsetParentRect.width + offsets.right;\n      }\n    } else {\n      left = offsets.left;\n    }\n\n    if (gpuAcceleration && prefixedProperty) {\n      styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n      styles[sideA] = 0;\n      styles[sideB] = 0;\n      styles.willChange = 'transform';\n    } else {\n      // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n      var invertTop = sideA === 'bottom' ? -1 : 1;\n      var invertLeft = sideB === 'right' ? -1 : 1;\n      styles[sideA] = top * invertTop;\n      styles[sideB] = left * invertLeft;\n      styles.willChange = sideA + ', ' + sideB;\n    } // Attributes\n\n\n    var attributes = {\n      'x-placement': data.placement\n    }; // Update `data` attributes, styles and arrowStyles\n\n    data.attributes = _extends({}, attributes, data.attributes);\n    data.styles = _extends({}, styles, data.styles);\n    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n    return data;\n  }\n  /**\n   * Helper used to know if the given modifier depends from another one.<br />\n   * It checks if the needed modifier is listed and enabled.\n   * @method\n   * @memberof Popper.Utils\n   * @param {Array} modifiers - list of modifiers\n   * @param {String} requestingName - name of requesting modifier\n   * @param {String} requestedName - name of requested modifier\n   * @returns {Boolean}\n   */\n\n\n  function isModifierRequired(modifiers, requestingName, requestedName) {\n    var requesting = find(modifiers, function (_ref) {\n      var name = _ref.name;\n      return name === requestingName;\n    });\n    var isRequired = !!requesting && modifiers.some(function (modifier) {\n      return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n    });\n\n    if (!isRequired) {\n      var _requesting = '`' + requestingName + '`';\n\n      var requested = '`' + requestedName + '`';\n      console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n    }\n\n    return isRequired;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function arrow(data, options) {\n    var _data$offsets$arrow; // arrow depends on keepTogether in order to work\n\n\n    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n      return data;\n    }\n\n    var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector\n\n    if (typeof arrowElement === 'string') {\n      arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier\n\n      if (!arrowElement) {\n        return data;\n      }\n    } else {\n      // if the arrowElement isn't a query selector we must check that the\n      // provided DOM node is child of its popper node\n      if (!data.instance.popper.contains(arrowElement)) {\n        console.warn('WARNING: `arrow.element` must be child of its popper element!');\n        return data;\n      }\n    }\n\n    var placement = data.placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n    var len = isVertical ? 'height' : 'width';\n    var sideCapitalized = isVertical ? 'Top' : 'Left';\n    var side = sideCapitalized.toLowerCase();\n    var altSide = isVertical ? 'left' : 'top';\n    var opSide = isVertical ? 'bottom' : 'right';\n    var arrowElementSize = getOuterSizes(arrowElement)[len]; //\n    // extends keepTogether behavior making sure the popper and its\n    // reference have enough pixels in conjunction\n    //\n    // top/left side\n\n    if (reference[opSide] - arrowElementSize < popper[side]) {\n      data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n    } // bottom/right side\n\n\n    if (reference[side] + arrowElementSize > popper[opSide]) {\n      data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n    }\n\n    data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper\n\n    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets\n    // take popper margin in account because we don't have this info available\n\n    var css = getStyleComputedProperty(data.instance.popper);\n    var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper\n\n    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n    data.arrowElement = arrowElement;\n    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n    return data;\n  }\n  /**\n   * Get the opposite placement variation of the given one\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement variation\n   * @returns {String} flipped placement variation\n   */\n\n\n  function getOppositeVariation(variation) {\n    if (variation === 'end') {\n      return 'start';\n    } else if (variation === 'start') {\n      return 'end';\n    }\n\n    return variation;\n  }\n  /**\n   * List of accepted placements to use as values of the `placement` option.<br />\n   * Valid placements are:\n   * - `auto`\n   * - `top`\n   * - `right`\n   * - `bottom`\n   * - `left`\n   *\n   * Each placement can have a variation from this list:\n   * - `-start`\n   * - `-end`\n   *\n   * Variations are interpreted easily if you think of them as the left to right\n   * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n   * is right.<br />\n   * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n   *\n   * Some valid examples are:\n   * - `top-end` (on top of reference, right aligned)\n   * - `right-start` (on right of reference, top aligned)\n   * - `bottom` (on bottom, centered)\n   * - `auto-end` (on the side with more space available, alignment depends by placement)\n   *\n   * @static\n   * @type {Array}\n   * @enum {String}\n   * @readonly\n   * @method placements\n   * @memberof Popper\n   */\n\n\n  var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`\n\n  var validPlacements = placements.slice(3);\n  /**\n   * Given an initial placement, returns all the subsequent placements\n   * clockwise (or counter-clockwise).\n   *\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement - A valid placement (it accepts variations)\n   * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n   * @returns {Array} placements including their variations\n   */\n\n  function clockwise(placement) {\n    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var index = validPlacements.indexOf(placement);\n    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n    return counter ? arr.reverse() : arr;\n  }\n\n  var BEHAVIORS = {\n    FLIP: 'flip',\n    CLOCKWISE: 'clockwise',\n    COUNTERCLOCKWISE: 'counterclockwise'\n  };\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n  function flip(data, options) {\n    // if `inner` modifier is enabled, we can't use the `flip` modifier\n    if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n      return data;\n    }\n\n    if (data.flipped && data.placement === data.originalPlacement) {\n      // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n      return data;\n    }\n\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n    var placement = data.placement.split('-')[0];\n    var placementOpposite = getOppositePlacement(placement);\n    var variation = data.placement.split('-')[1] || '';\n    var flipOrder = [];\n\n    switch (options.behavior) {\n      case BEHAVIORS.FLIP:\n        flipOrder = [placement, placementOpposite];\n        break;\n\n      case BEHAVIORS.CLOCKWISE:\n        flipOrder = clockwise(placement);\n        break;\n\n      case BEHAVIORS.COUNTERCLOCKWISE:\n        flipOrder = clockwise(placement, true);\n        break;\n\n      default:\n        flipOrder = options.behavior;\n    }\n\n    flipOrder.forEach(function (step, index) {\n      if (placement !== step || flipOrder.length === index + 1) {\n        return data;\n      }\n\n      placement = data.placement.split('-')[0];\n      placementOpposite = getOppositePlacement(placement);\n      var popperOffsets = data.offsets.popper;\n      var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here\n\n      var floor = Math.floor;\n      var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n      var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n      var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n      var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n      var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n      var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n      var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n      var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n      if (overlapsRef || overflowsBoundaries || flippedVariation) {\n        // this boolean to detect any flip loop\n        data.flipped = true;\n\n        if (overlapsRef || overflowsBoundaries) {\n          placement = flipOrder[index + 1];\n        }\n\n        if (flippedVariation) {\n          variation = getOppositeVariation(variation);\n        }\n\n        data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with\n        // any additional property we may add in the future\n\n        data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n        data = runModifiers(data.instance.modifiers, data, 'flip');\n      }\n    });\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function keepTogether(data) {\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var placement = data.placement.split('-')[0];\n    var floor = Math.floor;\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var side = isVertical ? 'right' : 'bottom';\n    var opSide = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    if (popper[side] < floor(reference[opSide])) {\n      data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n    }\n\n    if (popper[opSide] > floor(reference[side])) {\n      data.offsets.popper[opSide] = floor(reference[side]);\n    }\n\n    return data;\n  }\n  /**\n   * Converts a string containing value + unit into a px value number\n   * @function\n   * @memberof {modifiers~offset}\n   * @private\n   * @argument {String} str - Value + unit string\n   * @argument {String} measurement - `height` or `width`\n   * @argument {Object} popperOffsets\n   * @argument {Object} referenceOffsets\n   * @returns {Number|String}\n   * Value in pixels, or original string if no values were extracted\n   */\n\n\n  function toValue(str, measurement, popperOffsets, referenceOffsets) {\n    // separate value from unit\n    var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n    var value = +split[1];\n    var unit = split[2]; // If it's not a number it's an operator, I guess\n\n    if (!value) {\n      return str;\n    }\n\n    if (unit.indexOf('%') === 0) {\n      var element = void 0;\n\n      switch (unit) {\n        case '%p':\n          element = popperOffsets;\n          break;\n\n        case '%':\n        case '%r':\n        default:\n          element = referenceOffsets;\n      }\n\n      var rect = getClientRect(element);\n      return rect[measurement] / 100 * value;\n    } else if (unit === 'vh' || unit === 'vw') {\n      // if is a vh or vw, we calculate the size based on the viewport\n      var size = void 0;\n\n      if (unit === 'vh') {\n        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n      } else {\n        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n      }\n\n      return size / 100 * value;\n    } else {\n      // if is an explicit pixel unit, we get rid of the unit and keep the value\n      // if is an implicit unit, it's px, and we return just the value\n      return value;\n    }\n  }\n  /**\n   * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n   * @function\n   * @memberof {modifiers~offset}\n   * @private\n   * @argument {String} offset\n   * @argument {Object} popperOffsets\n   * @argument {Object} referenceOffsets\n   * @argument {String} basePlacement\n   * @returns {Array} a two cells array with x and y offsets in numbers\n   */\n\n\n  function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n    var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width\n    // in this way the first offset will use an axis and the second one\n    // will use the other one\n\n    var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands\n    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n\n    var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n      return frag.trim();\n    }); // Detect if the offset string contains a pair of values or a single one\n    // they could be separated by comma or space\n\n    var divider = fragments.indexOf(find(fragments, function (frag) {\n      return frag.search(/,|\\s/) !== -1;\n    }));\n\n    if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n      console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n    } // If divider is found, we divide the list of values and operands to divide\n    // them by ofset X and Y.\n\n\n    var splitRegex = /\\s*,\\s*|\\s+/;\n    var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations\n\n    ops = ops.map(function (op, index) {\n      // Most of the units rely on the orientation of the popper\n      var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n      var mergeWithPrevious = false;\n      return op // This aggregates any `+` or `-` sign that aren't considered operators\n      // e.g.: 10 + +5 => [10, +, +5]\n      .reduce(function (a, b) {\n        if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n          a[a.length - 1] = b;\n          mergeWithPrevious = true;\n          return a;\n        } else if (mergeWithPrevious) {\n          a[a.length - 1] += b;\n          mergeWithPrevious = false;\n          return a;\n        } else {\n          return a.concat(b);\n        }\n      }, []) // Here we convert the string values into number values (in px)\n      .map(function (str) {\n        return toValue(str, measurement, popperOffsets, referenceOffsets);\n      });\n    }); // Loop trough the offsets arrays and execute the operations\n\n    ops.forEach(function (op, index) {\n      op.forEach(function (frag, index2) {\n        if (isNumeric(frag)) {\n          offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n        }\n      });\n    });\n    return offsets;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @argument {Number|String} options.offset=0\n   * The offset value as described in the modifier description\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function offset(data, _ref) {\n    var offset = _ref.offset;\n    var placement = data.placement,\n        _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var basePlacement = placement.split('-')[0];\n    var offsets = void 0;\n\n    if (isNumeric(+offset)) {\n      offsets = [+offset, 0];\n    } else {\n      offsets = parseOffset(offset, popper, reference, basePlacement);\n    }\n\n    if (basePlacement === 'left') {\n      popper.top += offsets[0];\n      popper.left -= offsets[1];\n    } else if (basePlacement === 'right') {\n      popper.top += offsets[0];\n      popper.left += offsets[1];\n    } else if (basePlacement === 'top') {\n      popper.left += offsets[0];\n      popper.top -= offsets[1];\n    } else if (basePlacement === 'bottom') {\n      popper.left += offsets[0];\n      popper.top += offsets[1];\n    }\n\n    data.popper = popper;\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function preventOverflow(data, options) {\n    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to\n    // go one step up and use the next offsetParent as reference to\n    // avoid to make this modifier completely useless and look like broken\n\n    if (data.instance.reference === boundariesElement) {\n      boundariesElement = getOffsetParent(boundariesElement);\n    } // NOTE: DOM access here\n    // resets the popper's position so that the document size can be calculated excluding\n    // the size of the popper element itself\n\n\n    var transformProp = getSupportedPropertyName('transform');\n    var popperStyles = data.instance.popper.style; // assignment to help minification\n\n    var top = popperStyles.top,\n        left = popperStyles.left,\n        transform = popperStyles[transformProp];\n    popperStyles.top = '';\n    popperStyles.left = '';\n    popperStyles[transformProp] = '';\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here\n    // restores the original style properties after the offsets have been computed\n\n    popperStyles.top = top;\n    popperStyles.left = left;\n    popperStyles[transformProp] = transform;\n    options.boundaries = boundaries;\n    var order = options.priority;\n    var popper = data.offsets.popper;\n    var check = {\n      primary: function primary(placement) {\n        var value = popper[placement];\n\n        if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n          value = Math.max(popper[placement], boundaries[placement]);\n        }\n\n        return defineProperty({}, placement, value);\n      },\n      secondary: function secondary(placement) {\n        var mainSide = placement === 'right' ? 'left' : 'top';\n        var value = popper[mainSide];\n\n        if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n          value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n        }\n\n        return defineProperty({}, mainSide, value);\n      }\n    };\n    order.forEach(function (placement) {\n      var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n      popper = _extends({}, popper, check[side](placement));\n    });\n    data.offsets.popper = popper;\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function shift(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier\n\n    if (shiftvariation) {\n      var _data$offsets = data.offsets,\n          reference = _data$offsets.reference,\n          popper = _data$offsets.popper;\n      var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n      var side = isVertical ? 'left' : 'top';\n      var measurement = isVertical ? 'width' : 'height';\n      var shiftOffsets = {\n        start: defineProperty({}, side, reference[side]),\n        end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n      };\n      data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n    }\n\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function hide(data) {\n    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n      return data;\n    }\n\n    var refRect = data.offsets.reference;\n    var bound = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'preventOverflow';\n    }).boundaries;\n\n    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === true) {\n        return data;\n      }\n\n      data.hide = true;\n      data.attributes['x-out-of-boundaries'] = '';\n    } else {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === false) {\n        return data;\n      }\n\n      data.hide = false;\n      data.attributes['x-out-of-boundaries'] = false;\n    }\n\n    return data;\n  }\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n\n\n  function inner(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n    var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n    data.placement = getOppositePlacement(placement);\n    data.offsets.popper = getClientRect(popper);\n    return data;\n  }\n  /**\n   * Modifier function, each modifier can have a function of this type assigned\n   * to its `fn` property.<br />\n   * These functions will be called on each update, this means that you must\n   * make sure they are performant enough to avoid performance bottlenecks.\n   *\n   * @function ModifierFn\n   * @argument {dataObject} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {dataObject} The data object, properly modified\n   */\n\n  /**\n   * Modifiers are plugins used to alter the behavior of your poppers.<br />\n   * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n   * needed by the library.\n   *\n   * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n   * All the other properties are configurations that could be tweaked.\n   * @namespace modifiers\n   */\n\n\n  var modifiers = {\n    /**\n     * Modifier used to shift the popper on the start or end of its reference\n     * element.<br />\n     * It will read the variation of the `placement` property.<br />\n     * It can be one either `-end` or `-start`.\n     * @memberof modifiers\n     * @inner\n     */\n    shift: {\n      /** @prop {number} order=100 - Index used to define the order of execution */\n      order: 100,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: shift\n    },\n\n    /**\n     * The `offset` modifier can shift your popper on both its axis.\n     *\n     * It accepts the following units:\n     * - `px` or unit-less, interpreted as pixels\n     * - `%` or `%r`, percentage relative to the length of the reference element\n     * - `%p`, percentage relative to the length of the popper element\n     * - `vw`, CSS viewport width unit\n     * - `vh`, CSS viewport height unit\n     *\n     * For length is intended the main axis relative to the placement of the popper.<br />\n     * This means that if the placement is `top` or `bottom`, the length will be the\n     * `width`. In case of `left` or `right`, it will be the `height`.\n     *\n     * You can provide a single value (as `Number` or `String`), or a pair of values\n     * as `String` divided by a comma or one (or more) white spaces.<br />\n     * The latter is a deprecated method because it leads to confusion and will be\n     * removed in v2.<br />\n     * Additionally, it accepts additions and subtractions between different units.\n     * Note that multiplications and divisions aren't supported.\n     *\n     * Valid examples are:\n     * ```\n     * 10\n     * '10%'\n     * '10, 10'\n     * '10%, 10'\n     * '10 + 10%'\n     * '10 - 5vh + 3%'\n     * '-10px + 5vh, 5px - 6%'\n     * ```\n     * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n     * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n     * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    offset: {\n      /** @prop {number} order=200 - Index used to define the order of execution */\n      order: 200,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: offset,\n\n      /** @prop {Number|String} offset=0\n       * The offset value as described in the modifier description\n       */\n      offset: 0\n    },\n\n    /**\n     * Modifier used to prevent the popper from being positioned outside the boundary.\n     *\n     * A scenario exists where the reference itself is not within the boundaries.<br />\n     * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n     * In this case we need to decide whether the popper should either:\n     *\n     * - detach from the reference and remain \"trapped\" in the boundaries, or\n     * - if it should ignore the boundary and \"escape with its reference\"\n     *\n     * When `escapeWithReference` is set to`true` and reference is completely\n     * outside its boundaries, the popper will overflow (or completely leave)\n     * the boundaries in order to remain attached to the edge of the reference.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    preventOverflow: {\n      /** @prop {number} order=300 - Index used to define the order of execution */\n      order: 300,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: preventOverflow,\n\n      /**\n       * @prop {Array} [priority=['left','right','top','bottom']]\n       * Popper will try to prevent overflow following these priorities by default,\n       * then, it could overflow on the left and on top of the `boundariesElement`\n       */\n      priority: ['left', 'right', 'top', 'bottom'],\n\n      /**\n       * @prop {number} padding=5\n       * Amount of pixel used to define a minimum distance between the boundaries\n       * and the popper. This makes sure the popper always has a little padding\n       * between the edges of its container\n       */\n      padding: 5,\n\n      /**\n       * @prop {String|HTMLElement} boundariesElement='scrollParent'\n       * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n       * `viewport` or any DOM element.\n       */\n      boundariesElement: 'scrollParent'\n    },\n\n    /**\n     * Modifier used to make sure the reference and its popper stay near each other\n     * without leaving any gap between the two. Especially useful when the arrow is\n     * enabled and you want to ensure that it points to its reference element.\n     * It cares only about the first axis. You can still have poppers with margin\n     * between the popper and its reference element.\n     * @memberof modifiers\n     * @inner\n     */\n    keepTogether: {\n      /** @prop {number} order=400 - Index used to define the order of execution */\n      order: 400,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: keepTogether\n    },\n\n    /**\n     * This modifier is used to move the `arrowElement` of the popper to make\n     * sure it is positioned between the reference element and its popper element.\n     * It will read the outer size of the `arrowElement` node to detect how many\n     * pixels of conjunction are needed.\n     *\n     * It has no effect if no `arrowElement` is provided.\n     * @memberof modifiers\n     * @inner\n     */\n    arrow: {\n      /** @prop {number} order=500 - Index used to define the order of execution */\n      order: 500,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: arrow,\n\n      /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n      element: '[x-arrow]'\n    },\n\n    /**\n     * Modifier used to flip the popper's placement when it starts to overlap its\n     * reference element.\n     *\n     * Requires the `preventOverflow` modifier before it in order to work.\n     *\n     * **NOTE:** this modifier will interrupt the current update cycle and will\n     * restart it if it detects the need to flip the placement.\n     * @memberof modifiers\n     * @inner\n     */\n    flip: {\n      /** @prop {number} order=600 - Index used to define the order of execution */\n      order: 600,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: flip,\n\n      /**\n       * @prop {String|Array} behavior='flip'\n       * The behavior used to change the popper's placement. It can be one of\n       * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n       * placements (with optional variations)\n       */\n      behavior: 'flip',\n\n      /**\n       * @prop {number} padding=5\n       * The popper will flip if it hits the edges of the `boundariesElement`\n       */\n      padding: 5,\n\n      /**\n       * @prop {String|HTMLElement} boundariesElement='viewport'\n       * The element which will define the boundaries of the popper position.\n       * The popper will never be placed outside of the defined boundaries\n       * (except if `keepTogether` is enabled)\n       */\n      boundariesElement: 'viewport'\n    },\n\n    /**\n     * Modifier used to make the popper flow toward the inner of the reference element.\n     * By default, when this modifier is disabled, the popper will be placed outside\n     * the reference element.\n     * @memberof modifiers\n     * @inner\n     */\n    inner: {\n      /** @prop {number} order=700 - Index used to define the order of execution */\n      order: 700,\n\n      /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n      enabled: false,\n\n      /** @prop {ModifierFn} */\n      fn: inner\n    },\n\n    /**\n     * Modifier used to hide the popper when its reference element is outside of the\n     * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n     * be used to hide with a CSS selector the popper when its reference is\n     * out of boundaries.\n     *\n     * Requires the `preventOverflow` modifier before it in order to work.\n     * @memberof modifiers\n     * @inner\n     */\n    hide: {\n      /** @prop {number} order=800 - Index used to define the order of execution */\n      order: 800,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: hide\n    },\n\n    /**\n     * Computes the style that will be applied to the popper element to gets\n     * properly positioned.\n     *\n     * Note that this modifier will not touch the DOM, it just prepares the styles\n     * so that `applyStyle` modifier can apply it. This separation is useful\n     * in case you need to replace `applyStyle` with a custom implementation.\n     *\n     * This modifier has `850` as `order` value to maintain backward compatibility\n     * with previous versions of Popper.js. Expect the modifiers ordering method\n     * to change in future major versions of the library.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    computeStyle: {\n      /** @prop {number} order=850 - Index used to define the order of execution */\n      order: 850,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: computeStyle,\n\n      /**\n       * @prop {Boolean} gpuAcceleration=true\n       * If true, it uses the CSS 3D transformation to position the popper.\n       * Otherwise, it will use the `top` and `left` properties\n       */\n      gpuAcceleration: true,\n\n      /**\n       * @prop {string} [x='bottom']\n       * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n       * Change this if your popper should grow in a direction different from `bottom`\n       */\n      x: 'bottom',\n\n      /**\n       * @prop {string} [x='left']\n       * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n       * Change this if your popper should grow in a direction different from `right`\n       */\n      y: 'right'\n    },\n\n    /**\n     * Applies the computed styles to the popper element.\n     *\n     * All the DOM manipulations are limited to this modifier. This is useful in case\n     * you want to integrate Popper.js inside a framework or view library and you\n     * want to delegate all the DOM manipulations to it.\n     *\n     * Note that if you disable this modifier, you must make sure the popper element\n     * has its position set to `absolute` before Popper.js can do its work!\n     *\n     * Just disable this modifier and define your own to achieve the desired effect.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    applyStyle: {\n      /** @prop {number} order=900 - Index used to define the order of execution */\n      order: 900,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: applyStyle,\n\n      /** @prop {Function} */\n      onLoad: applyStyleOnLoad,\n\n      /**\n       * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n       * @prop {Boolean} gpuAcceleration=true\n       * If true, it uses the CSS 3D transformation to position the popper.\n       * Otherwise, it will use the `top` and `left` properties\n       */\n      gpuAcceleration: undefined\n    }\n  };\n  /**\n   * The `dataObject` is an object containing all the information used by Popper.js.\n   * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n   * @name dataObject\n   * @property {Object} data.instance The Popper.js instance\n   * @property {String} data.placement Placement applied to popper\n   * @property {String} data.originalPlacement Placement originally defined on init\n   * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n   * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n   * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n   * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n   * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n   * @property {Object} data.boundaries Offsets of the popper boundaries\n   * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n   * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n   * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n   * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n   */\n\n  /**\n   * Default options provided to Popper.js constructor.<br />\n   * These can be overridden using the `options` argument of Popper.js.<br />\n   * To override an option, simply pass an object with the same\n   * structure of the `options` object, as the 3rd argument. For example:\n   * ```\n   * new Popper(ref, pop, {\n   *   modifiers: {\n   *     preventOverflow: { enabled: false }\n   *   }\n   * })\n   * ```\n   * @type {Object}\n   * @static\n   * @memberof Popper\n   */\n\n  var Defaults = {\n    /**\n     * Popper's placement.\n     * @prop {Popper.placements} placement='bottom'\n     */\n    placement: 'bottom',\n\n    /**\n     * Set this to true if you want popper to position it self in 'fixed' mode\n     * @prop {Boolean} positionFixed=false\n     */\n    positionFixed: false,\n\n    /**\n     * Whether events (resize, scroll) are initially enabled.\n     * @prop {Boolean} eventsEnabled=true\n     */\n    eventsEnabled: true,\n\n    /**\n     * Set to true if you want to automatically remove the popper when\n     * you call the `destroy` method.\n     * @prop {Boolean} removeOnDestroy=false\n     */\n    removeOnDestroy: false,\n\n    /**\n     * Callback called when the popper is created.<br />\n     * By default, it is set to no-op.<br />\n     * Access Popper.js instance with `data.instance`.\n     * @prop {onCreate}\n     */\n    onCreate: function onCreate() {},\n\n    /**\n     * Callback called when the popper is updated. This callback is not called\n     * on the initialization/creation of the popper, but only on subsequent\n     * updates.<br />\n     * By default, it is set to no-op.<br />\n     * Access Popper.js instance with `data.instance`.\n     * @prop {onUpdate}\n     */\n    onUpdate: function onUpdate() {},\n\n    /**\n     * List of modifiers used to modify the offsets before they are applied to the popper.\n     * They provide most of the functionalities of Popper.js.\n     * @prop {modifiers}\n     */\n    modifiers: modifiers\n  };\n  /**\n   * @callback onCreate\n   * @param {dataObject} data\n   */\n\n  /**\n   * @callback onUpdate\n   * @param {dataObject} data\n   */\n  // Utils\n  // Methods\n\n  var Popper = function () {\n    /**\n     * Creates a new Popper.js instance.\n     * @class Popper\n     * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n     * @param {HTMLElement} popper - The HTML element used as the popper\n     * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n     * @return {Object} instance - The generated Popper.js instance\n     */\n    function Popper(reference, popper) {\n      var _this = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      classCallCheck(this, Popper);\n\n      this.scheduleUpdate = function () {\n        return requestAnimationFrame(_this.update);\n      }; // make update() debounced, so that it only runs at most once-per-tick\n\n\n      this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it\n\n      this.options = _extends({}, Popper.Defaults, options); // init state\n\n      this.state = {\n        isDestroyed: false,\n        isCreated: false,\n        scrollParents: []\n      }; // get reference and popper elements (allow jQuery wrappers)\n\n      this.reference = reference && reference.jquery ? reference[0] : reference;\n      this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options\n\n      this.options.modifiers = {};\n      Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n        _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n      }); // Refactoring modifiers' list (Object => Array)\n\n      this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n        return _extends({\n          name: name\n        }, _this.options.modifiers[name]);\n      }) // sort the modifiers by order\n      .sort(function (a, b) {\n        return a.order - b.order;\n      }); // modifiers have the ability to execute arbitrary code when Popper.js get inited\n      // such code is executed in the same order of its modifier\n      // they could add new properties to their options configuration\n      // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n\n      this.modifiers.forEach(function (modifierOptions) {\n        if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n          modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n        }\n      }); // fire the first update to position the popper in the right place\n\n      this.update();\n      var eventsEnabled = this.options.eventsEnabled;\n\n      if (eventsEnabled) {\n        // setup event listeners, they will take care of update the position in specific situations\n        this.enableEventListeners();\n      }\n\n      this.state.eventsEnabled = eventsEnabled;\n    } // We can't use class properties because they don't get listed in the\n    // class prototype and break stuff like Sinon stubs\n\n\n    createClass(Popper, [{\n      key: 'update',\n      value: function update$$1() {\n        return update.call(this);\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy$$1() {\n        return destroy.call(this);\n      }\n    }, {\n      key: 'enableEventListeners',\n      value: function enableEventListeners$$1() {\n        return enableEventListeners.call(this);\n      }\n    }, {\n      key: 'disableEventListeners',\n      value: function disableEventListeners$$1() {\n        return disableEventListeners.call(this);\n      }\n      /**\n       * Schedules an update. It will run on the next UI update available.\n       * @method scheduleUpdate\n       * @memberof Popper\n       */\n\n      /**\n       * Collection of utilities useful when writing custom modifiers.\n       * Starting from version 1.7, this method is available only if you\n       * include `popper-utils.js` before `popper.js`.\n       *\n       * **DEPRECATION**: This way to access PopperUtils is deprecated\n       * and will be removed in v2! Use the PopperUtils module directly instead.\n       * Due to the high instability of the methods contained in Utils, we can't\n       * guarantee them to follow semver. Use them at your own risk!\n       * @static\n       * @private\n       * @type {Object}\n       * @deprecated since version 1.8\n       * @member Utils\n       * @memberof Popper\n       */\n\n    }]);\n    return Popper;\n  }();\n  /**\n   * The `referenceObject` is an object that provides an interface compatible with Popper.js\n   * and lets you use it as replacement of a real DOM node.<br />\n   * You can use this method to position a popper relatively to a set of coordinates\n   * in case you don't have a DOM node to use as reference.\n   *\n   * ```\n   * new Popper(referenceObject, popperNode);\n   * ```\n   *\n   * NB: This feature isn't supported in Internet Explorer 10.\n   * @name referenceObject\n   * @property {Function} data.getBoundingClientRect\n   * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n   * @property {number} data.clientWidth\n   * An ES6 getter that will return the width of the virtual reference element.\n   * @property {number} data.clientHeight\n   * An ES6 getter that will return the height of the virtual reference element.\n   */\n\n\n  Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n  Popper.placements = placements;\n  Popper.Defaults = Defaults;\n  return Popper;\n});","map":{"version":3,"sources":["/Users/vponce/Desarrollos/credits_factor_global/vendor/assets/javascripts/popper.js"],"names":["global","factory","exports","module","define","amd","Popper","isBrowser","window","document","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","setTimeout","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","ownerDocument","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","arguments","undefined","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_extends","assign","source","hasOwnProperty","getClientRect","offsets","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","_ref","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","findIndex","prop","cur","match","runModifiers","modifiers","data","ends","modifiersToRun","slice","forEach","console","warn","enabled","update","isDestroyed","arrowStyles","attributes","flipped","options","positionFixed","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","defaultView","attachToScrollParents","event","callback","scrollParents","isBody","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","floor","round","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","_data$offsets","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","onLoad","Defaults","_this","requestAnimationFrame","bind","jquery","update$$1","destroy$$1","enableEventListeners$$1","disableEventListeners$$1","Utils","PopperUtils"],"mappings":"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;AACA;AACYnG,MAAAA,CAAC,EAAE,QAlBO;;AAmBV;AACZ;AACA;AACA;AACA;AACYE,MAAAA,CAAC,EAAE;AAxBO,KAlPF;;AA6QZ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ2F,IAAAA,UAAU,EAAE;AACR;AACAnO,MAAAA,KAAK,EAAE,GAFC;;AAGR;AACAwK,MAAAA,OAAO,EAAE,IAJD;;AAKR;AACA3N,MAAAA,EAAE,EAAEsR,UANI;;AAOR;AACA8F,MAAAA,MAAM,EAAE5F,gBARA;;AASR;AACZ;AACA;AACA;AACA;AACA;AACYI,MAAAA,eAAe,EAAEzN;AAfT;AA5RA,GAAhB;AA+SA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,MAAIkT,QAAQ,GAAG;AACX;AACR;AACA;AACA;AACQhN,IAAAA,SAAS,EAAE,QALA;;AAOX;AACR;AACA;AACA;AACQ6D,IAAAA,aAAa,EAAE,KAXJ;;AAaX;AACR;AACA;AACA;AACQsC,IAAAA,aAAa,EAAE,IAjBJ;;AAmBX;AACR;AACA;AACA;AACA;AACQf,IAAAA,eAAe,EAAE,KAxBN;;AA0BX;AACR;AACA;AACA;AACA;AACA;AACQlB,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB,CAAE,CAhCrB;;AAkCX;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB,CAAE,CA1CrB;;AA4CX;AACR;AACA;AACA;AACA;AACQrB,IAAAA,SAAS,EAAEA;AAjDA,GAAf;AAoDA;AACJ;AACA;AACA;;AAEI;AACJ;AACA;AACA;AAEA;AACA;;AACI,MAAI/N,MAAM,GAAG,YAAY;AACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,aAASA,MAAT,CAAgBuK,SAAhB,EAA2B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","sourcesContent":["/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.4\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n        typeof define === 'function' && define.amd ? define(factory) :\n            (global.Popper = factory());\n}(this, (function () { 'use strict';\n\n    var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n    var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n    var timeoutDuration = 0;\n    for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n        if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n            timeoutDuration = 1;\n            break;\n        }\n    }\n\n    function microtaskDebounce(fn) {\n        var called = false;\n        return function () {\n            if (called) {\n                return;\n            }\n            called = true;\n            window.Promise.resolve().then(function () {\n                called = false;\n                fn();\n            });\n        };\n    }\n\n    function taskDebounce(fn) {\n        var scheduled = false;\n        return function () {\n            if (!scheduled) {\n                scheduled = true;\n                setTimeout(function () {\n                    scheduled = false;\n                    fn();\n                }, timeoutDuration);\n            }\n        };\n    }\n\n    var supportsMicroTasks = isBrowser && window.Promise;\n\n    /**\n     * Create a debounced version of a method, that's asynchronously deferred\n     * but called in the minimum time possible.\n     *\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Function} fn\n     * @returns {Function}\n     */\n    var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n    /**\n     * Check if the given variable is a function\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Any} functionToCheck - variable to check\n     * @returns {Boolean} answer to: is a function?\n     */\n    function isFunction(functionToCheck) {\n        var getType = {};\n        return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n    }\n\n    /**\n     * Get CSS computed property of the given element\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Eement} element\n     * @argument {String} property\n     */\n    function getStyleComputedProperty(element, property) {\n        if (element.nodeType !== 1) {\n            return [];\n        }\n        // NOTE: 1 DOM access here\n        var css = getComputedStyle(element, null);\n        return property ? css[property] : css;\n    }\n\n    /**\n     * Returns the parentNode or the host of the element\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element\n     * @returns {Element} parent\n     */\n    function getParentNode(element) {\n        if (element.nodeName === 'HTML') {\n            return element;\n        }\n        return element.parentNode || element.host;\n    }\n\n    /**\n     * Returns the scrolling parent of the given element\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element\n     * @returns {Element} scroll parent\n     */\n    function getScrollParent(element) {\n        // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n        if (!element) {\n            return document.body;\n        }\n\n        switch (element.nodeName) {\n            case 'HTML':\n            case 'BODY':\n                return element.ownerDocument.body;\n            case '#document':\n                return element.body;\n        }\n\n        // Firefox want us to check `-x` and `-y` variations as well\n\n        var _getStyleComputedProp = getStyleComputedProperty(element),\n            overflow = _getStyleComputedProp.overflow,\n            overflowX = _getStyleComputedProp.overflowX,\n            overflowY = _getStyleComputedProp.overflowY;\n\n        if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n            return element;\n        }\n\n        return getScrollParent(getParentNode(element));\n    }\n\n    var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\n    var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n    /**\n     * Determines if the browser is Internet Explorer\n     * @method\n     * @memberof Popper.Utils\n     * @param {Number} version to check\n     * @returns {Boolean} isIE\n     */\n    function isIE(version) {\n        if (version === 11) {\n            return isIE11;\n        }\n        if (version === 10) {\n            return isIE10;\n        }\n        return isIE11 || isIE10;\n    }\n\n    /**\n     * Returns the offset parent of the given element\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element\n     * @returns {Element} offset parent\n     */\n    function getOffsetParent(element) {\n        if (!element) {\n            return document.documentElement;\n        }\n\n        var noOffsetParent = isIE(10) ? document.body : null;\n\n        // NOTE: 1 DOM access here\n        var offsetParent = element.offsetParent;\n        // Skip hidden elements which don't have an offsetParent\n        while (offsetParent === noOffsetParent && element.nextElementSibling) {\n            offsetParent = (element = element.nextElementSibling).offsetParent;\n        }\n\n        var nodeName = offsetParent && offsetParent.nodeName;\n\n        if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n            return element ? element.ownerDocument.documentElement : document.documentElement;\n        }\n\n        // .offsetParent will return the closest TD or TABLE in case\n        // no offsetParent is present, I hate this job...\n        if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n            return getOffsetParent(offsetParent);\n        }\n\n        return offsetParent;\n    }\n\n    function isOffsetContainer(element) {\n        var nodeName = element.nodeName;\n\n        if (nodeName === 'BODY') {\n            return false;\n        }\n        return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n    }\n\n    /**\n     * Finds the root node (document, shadowDOM root) of the given element\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} node\n     * @returns {Element} root node\n     */\n    function getRoot(node) {\n        if (node.parentNode !== null) {\n            return getRoot(node.parentNode);\n        }\n\n        return node;\n    }\n\n    /**\n     * Finds the offset parent common to the two provided nodes\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element1\n     * @argument {Element} element2\n     * @returns {Element} common offset parent\n     */\n    function findCommonOffsetParent(element1, element2) {\n        // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n        if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n            return document.documentElement;\n        }\n\n        // Here we make sure to give as \"start\" the element that comes first in the DOM\n        var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n        var start = order ? element1 : element2;\n        var end = order ? element2 : element1;\n\n        // Get common ancestor container\n        var range = document.createRange();\n        range.setStart(start, 0);\n        range.setEnd(end, 0);\n        var commonAncestorContainer = range.commonAncestorContainer;\n\n        // Both nodes are inside #document\n\n        if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n            if (isOffsetContainer(commonAncestorContainer)) {\n                return commonAncestorContainer;\n            }\n\n            return getOffsetParent(commonAncestorContainer);\n        }\n\n        // one of the nodes is inside shadowDOM, find which one\n        var element1root = getRoot(element1);\n        if (element1root.host) {\n            return findCommonOffsetParent(element1root.host, element2);\n        } else {\n            return findCommonOffsetParent(element1, getRoot(element2).host);\n        }\n    }\n\n    /**\n     * Gets the scroll value of the given element in the given side (top and left)\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element\n     * @argument {String} side `top` or `left`\n     * @returns {number} amount of scrolled pixels\n     */\n    function getScroll(element) {\n        var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n        var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n        var nodeName = element.nodeName;\n\n        if (nodeName === 'BODY' || nodeName === 'HTML') {\n            var html = element.ownerDocument.documentElement;\n            var scrollingElement = element.ownerDocument.scrollingElement || html;\n            return scrollingElement[upperSide];\n        }\n\n        return element[upperSide];\n    }\n\n    /*\n     * Sum or subtract the element scroll values (left and top) from a given rect object\n     * @method\n     * @memberof Popper.Utils\n     * @param {Object} rect - Rect object you want to change\n     * @param {HTMLElement} element - The element from the function reads the scroll values\n     * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n     * @return {Object} rect - The modifier rect object\n     */\n    function includeScroll(rect, element) {\n        var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        var scrollTop = getScroll(element, 'top');\n        var scrollLeft = getScroll(element, 'left');\n        var modifier = subtract ? -1 : 1;\n        rect.top += scrollTop * modifier;\n        rect.bottom += scrollTop * modifier;\n        rect.left += scrollLeft * modifier;\n        rect.right += scrollLeft * modifier;\n        return rect;\n    }\n\n    /*\n     * Helper to detect borders of a given element\n     * @method\n     * @memberof Popper.Utils\n     * @param {CSSStyleDeclaration} styles\n     * Result of `getStyleComputedProperty` on the given element\n     * @param {String} axis - `x` or `y`\n     * @return {number} borders - The borders size of the given axis\n     */\n\n    function getBordersSize(styles, axis) {\n        var sideA = axis === 'x' ? 'Left' : 'Top';\n        var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n        return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n    }\n\n    function getSize(axis, body, html, computedStyle) {\n        return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n    }\n\n    function getWindowSizes(document) {\n        var body = document.body;\n        var html = document.documentElement;\n        var computedStyle = isIE(10) && getComputedStyle(html);\n\n        return {\n            height: getSize('Height', body, html, computedStyle),\n            width: getSize('Width', body, html, computedStyle)\n        };\n    }\n\n    var classCallCheck = function (instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    };\n\n    var createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n\n\n\n\n    var defineProperty = function (obj, key, value) {\n        if (key in obj) {\n            Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n            });\n        } else {\n            obj[key] = value;\n        }\n\n        return obj;\n    };\n\n    var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        return target;\n    };\n\n    /**\n     * Given element offsets, generate an output similar to getBoundingClientRect\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Object} offsets\n     * @returns {Object} ClientRect like output\n     */\n    function getClientRect(offsets) {\n        return _extends({}, offsets, {\n            right: offsets.left + offsets.width,\n            bottom: offsets.top + offsets.height\n        });\n    }\n\n    /**\n     * Get bounding client rect of given element\n     * @method\n     * @memberof Popper.Utils\n     * @param {HTMLElement} element\n     * @return {Object} client rect\n     */\n    function getBoundingClientRect(element) {\n        var rect = {};\n\n        // IE10 10 FIX: Please, don't ask, the element isn't\n        // considered in DOM in some circumstances...\n        // This isn't reproducible in IE10 compatibility mode of IE11\n        try {\n            if (isIE(10)) {\n                rect = element.getBoundingClientRect();\n                var scrollTop = getScroll(element, 'top');\n                var scrollLeft = getScroll(element, 'left');\n                rect.top += scrollTop;\n                rect.left += scrollLeft;\n                rect.bottom += scrollTop;\n                rect.right += scrollLeft;\n            } else {\n                rect = element.getBoundingClientRect();\n            }\n        } catch (e) {}\n\n        var result = {\n            left: rect.left,\n            top: rect.top,\n            width: rect.right - rect.left,\n            height: rect.bottom - rect.top\n        };\n\n        // subtract scrollbar size from sizes\n        var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n        var width = sizes.width || element.clientWidth || result.right - result.left;\n        var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n        var horizScrollbar = element.offsetWidth - width;\n        var vertScrollbar = element.offsetHeight - height;\n\n        // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n        // we make this check conditional for performance reasons\n        if (horizScrollbar || vertScrollbar) {\n            var styles = getStyleComputedProperty(element);\n            horizScrollbar -= getBordersSize(styles, 'x');\n            vertScrollbar -= getBordersSize(styles, 'y');\n\n            result.width -= horizScrollbar;\n            result.height -= vertScrollbar;\n        }\n\n        return getClientRect(result);\n    }\n\n    function getOffsetRectRelativeToArbitraryNode(children, parent) {\n        var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        var isIE10 = isIE(10);\n        var isHTML = parent.nodeName === 'HTML';\n        var childrenRect = getBoundingClientRect(children);\n        var parentRect = getBoundingClientRect(parent);\n        var scrollParent = getScrollParent(children);\n\n        var styles = getStyleComputedProperty(parent);\n        var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n        var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n        // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n        if (fixedPosition && isHTML) {\n            parentRect.top = Math.max(parentRect.top, 0);\n            parentRect.left = Math.max(parentRect.left, 0);\n        }\n        var offsets = getClientRect({\n            top: childrenRect.top - parentRect.top - borderTopWidth,\n            left: childrenRect.left - parentRect.left - borderLeftWidth,\n            width: childrenRect.width,\n            height: childrenRect.height\n        });\n        offsets.marginTop = 0;\n        offsets.marginLeft = 0;\n\n        // Subtract margins of documentElement in case it's being used as parent\n        // we do this only on HTML because it's the only element that behaves\n        // differently when margins are applied to it. The margins are included in\n        // the box of the documentElement, in the other cases not.\n        if (!isIE10 && isHTML) {\n            var marginTop = parseFloat(styles.marginTop, 10);\n            var marginLeft = parseFloat(styles.marginLeft, 10);\n\n            offsets.top -= borderTopWidth - marginTop;\n            offsets.bottom -= borderTopWidth - marginTop;\n            offsets.left -= borderLeftWidth - marginLeft;\n            offsets.right -= borderLeftWidth - marginLeft;\n\n            // Attach marginTop and marginLeft because in some circumstances we may need them\n            offsets.marginTop = marginTop;\n            offsets.marginLeft = marginLeft;\n        }\n\n        if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n            offsets = includeScroll(offsets, parent);\n        }\n\n        return offsets;\n    }\n\n    function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n        var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var html = element.ownerDocument.documentElement;\n        var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n        var width = Math.max(html.clientWidth, window.innerWidth || 0);\n        var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n        var scrollTop = !excludeScroll ? getScroll(html) : 0;\n        var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n        var offset = {\n            top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n            left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n            width: width,\n            height: height\n        };\n\n        return getClientRect(offset);\n    }\n\n    /**\n     * Check if the given element is fixed or is inside a fixed parent\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element\n     * @argument {Element} customContainer\n     * @returns {Boolean} answer to \"isFixed?\"\n     */\n    function isFixed(element) {\n        var nodeName = element.nodeName;\n        if (nodeName === 'BODY' || nodeName === 'HTML') {\n            return false;\n        }\n        if (getStyleComputedProperty(element, 'position') === 'fixed') {\n            return true;\n        }\n        return isFixed(getParentNode(element));\n    }\n\n    /**\n     * Finds the first parent of an element that has a transformed property defined\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element\n     * @returns {Element} first transformed parent or documentElement\n     */\n\n    function getFixedPositionOffsetParent(element) {\n        // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n        if (!element || !element.parentElement || isIE()) {\n            return document.documentElement;\n        }\n        var el = element.parentElement;\n        while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n            el = el.parentElement;\n        }\n        return el || document.documentElement;\n    }\n\n    /**\n     * Computed the boundaries limits and return them\n     * @method\n     * @memberof Popper.Utils\n     * @param {HTMLElement} popper\n     * @param {HTMLElement} reference\n     * @param {number} padding\n     * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n     * @param {Boolean} fixedPosition - Is in fixed position mode\n     * @returns {Object} Coordinates of the boundaries\n     */\n    function getBoundaries(popper, reference, padding, boundariesElement) {\n        var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n        // NOTE: 1 DOM access here\n\n        var boundaries = { top: 0, left: 0 };\n        var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n        // Handle viewport case\n        if (boundariesElement === 'viewport') {\n            boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n        } else {\n            // Handle other cases based on DOM element used as boundaries\n            var boundariesNode = void 0;\n            if (boundariesElement === 'scrollParent') {\n                boundariesNode = getScrollParent(getParentNode(reference));\n                if (boundariesNode.nodeName === 'BODY') {\n                    boundariesNode = popper.ownerDocument.documentElement;\n                }\n            } else if (boundariesElement === 'window') {\n                boundariesNode = popper.ownerDocument.documentElement;\n            } else {\n                boundariesNode = boundariesElement;\n            }\n\n            var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n            // In case of HTML, we need a different computation\n            if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n                var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n                    height = _getWindowSizes.height,\n                    width = _getWindowSizes.width;\n\n                boundaries.top += offsets.top - offsets.marginTop;\n                boundaries.bottom = height + offsets.top;\n                boundaries.left += offsets.left - offsets.marginLeft;\n                boundaries.right = width + offsets.left;\n            } else {\n                // for all the other DOM elements, this one is good\n                boundaries = offsets;\n            }\n        }\n\n        // Add paddings\n        padding = padding || 0;\n        var isPaddingNumber = typeof padding === 'number';\n        boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n        boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n        boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n        boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n        return boundaries;\n    }\n\n    function getArea(_ref) {\n        var width = _ref.width,\n            height = _ref.height;\n\n        return width * height;\n    }\n\n    /**\n     * Utility used to transform the `auto` placement to the placement with more\n     * available space.\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Object} data - The data object generated by update method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The data object, properly modified\n     */\n    function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n        var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n        if (placement.indexOf('auto') === -1) {\n            return placement;\n        }\n\n        var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n        var rects = {\n            top: {\n                width: boundaries.width,\n                height: refRect.top - boundaries.top\n            },\n            right: {\n                width: boundaries.right - refRect.right,\n                height: boundaries.height\n            },\n            bottom: {\n                width: boundaries.width,\n                height: boundaries.bottom - refRect.bottom\n            },\n            left: {\n                width: refRect.left - boundaries.left,\n                height: boundaries.height\n            }\n        };\n\n        var sortedAreas = Object.keys(rects).map(function (key) {\n            return _extends({\n                key: key\n            }, rects[key], {\n                area: getArea(rects[key])\n            });\n        }).sort(function (a, b) {\n            return b.area - a.area;\n        });\n\n        var filteredAreas = sortedAreas.filter(function (_ref2) {\n            var width = _ref2.width,\n                height = _ref2.height;\n            return width >= popper.clientWidth && height >= popper.clientHeight;\n        });\n\n        var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n        var variation = placement.split('-')[1];\n\n        return computedPlacement + (variation ? '-' + variation : '');\n    }\n\n    /**\n     * Get offsets to the reference element\n     * @method\n     * @memberof Popper.Utils\n     * @param {Object} state\n     * @param {Element} popper - the popper element\n     * @param {Element} reference - the reference element (the popper will be relative to this)\n     * @param {Element} fixedPosition - is in fixed position mode\n     * @returns {Object} An object containing the offsets which will be applied to the popper\n     */\n    function getReferenceOffsets(state, popper, reference) {\n        var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n        var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n        return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n    }\n\n    /**\n     * Get the outer sizes of the given element (offset size + margins)\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element\n     * @returns {Object} object containing width and height properties\n     */\n    function getOuterSizes(element) {\n        var styles = getComputedStyle(element);\n        var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n        var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n        var result = {\n            width: element.offsetWidth + y,\n            height: element.offsetHeight + x\n        };\n        return result;\n    }\n\n    /**\n     * Get the opposite placement of the given one\n     * @method\n     * @memberof Popper.Utils\n     * @argument {String} placement\n     * @returns {String} flipped placement\n     */\n    function getOppositePlacement(placement) {\n        var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n        return placement.replace(/left|right|bottom|top/g, function (matched) {\n            return hash[matched];\n        });\n    }\n\n    /**\n     * Get offsets to the popper\n     * @method\n     * @memberof Popper.Utils\n     * @param {Object} position - CSS position the Popper will get applied\n     * @param {HTMLElement} popper - the popper element\n     * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n     * @param {String} placement - one of the valid placement options\n     * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n     */\n    function getPopperOffsets(popper, referenceOffsets, placement) {\n        placement = placement.split('-')[0];\n\n        // Get popper node sizes\n        var popperRect = getOuterSizes(popper);\n\n        // Add position, width and height to our offsets object\n        var popperOffsets = {\n            width: popperRect.width,\n            height: popperRect.height\n        };\n\n        // depending by the popper placement we have to compute its offsets slightly differently\n        var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n        var mainSide = isHoriz ? 'top' : 'left';\n        var secondarySide = isHoriz ? 'left' : 'top';\n        var measurement = isHoriz ? 'height' : 'width';\n        var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n        popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n        if (placement === secondarySide) {\n            popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n        } else {\n            popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n        }\n\n        return popperOffsets;\n    }\n\n    /**\n     * Mimics the `find` method of Array\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Array} arr\n     * @argument prop\n     * @argument value\n     * @returns index or -1\n     */\n    function find(arr, check) {\n        // use native find if supported\n        if (Array.prototype.find) {\n            return arr.find(check);\n        }\n\n        // use `filter` to obtain the same behavior of `find`\n        return arr.filter(check)[0];\n    }\n\n    /**\n     * Return the index of the matching object\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Array} arr\n     * @argument prop\n     * @argument value\n     * @returns index or -1\n     */\n    function findIndex(arr, prop, value) {\n        // use native findIndex if supported\n        if (Array.prototype.findIndex) {\n            return arr.findIndex(function (cur) {\n                return cur[prop] === value;\n            });\n        }\n\n        // use `find` + `indexOf` if `findIndex` isn't supported\n        var match = find(arr, function (obj) {\n            return obj[prop] === value;\n        });\n        return arr.indexOf(match);\n    }\n\n    /**\n     * Loop trough the list of modifiers and run them in order,\n     * each of them will then edit the data object.\n     * @method\n     * @memberof Popper.Utils\n     * @param {dataObject} data\n     * @param {Array} modifiers\n     * @param {String} ends - Optional modifier name used as stopper\n     * @returns {dataObject}\n     */\n    function runModifiers(modifiers, data, ends) {\n        var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n        modifiersToRun.forEach(function (modifier) {\n            if (modifier['function']) {\n                // eslint-disable-line dot-notation\n                console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n            }\n            var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n            if (modifier.enabled && isFunction(fn)) {\n                // Add properties to offsets to make them a complete clientRect object\n                // we do this before each modifier to make sure the previous one doesn't\n                // mess with these values\n                data.offsets.popper = getClientRect(data.offsets.popper);\n                data.offsets.reference = getClientRect(data.offsets.reference);\n\n                data = fn(data, modifier);\n            }\n        });\n\n        return data;\n    }\n\n    /**\n     * Updates the position of the popper, computing the new offsets and applying\n     * the new style.<br />\n     * Prefer `scheduleUpdate` over `update` because of performance reasons.\n     * @method\n     * @memberof Popper\n     */\n    function update() {\n        // if popper is destroyed, don't perform any further update\n        if (this.state.isDestroyed) {\n            return;\n        }\n\n        var data = {\n            instance: this,\n            styles: {},\n            arrowStyles: {},\n            attributes: {},\n            flipped: false,\n            offsets: {}\n        };\n\n        // compute reference element offsets\n        data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n        // compute auto placement, store placement inside the data object,\n        // modifiers will be able to edit `placement` if needed\n        // and refer to originalPlacement to know the original value\n        data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n        // store the computed placement inside `originalPlacement`\n        data.originalPlacement = data.placement;\n\n        data.positionFixed = this.options.positionFixed;\n\n        // compute the popper offsets\n        data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n        data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n        // run the modifiers\n        data = runModifiers(this.modifiers, data);\n\n        // the first `update` will call `onCreate` callback\n        // the other ones will call `onUpdate` callback\n        if (!this.state.isCreated) {\n            this.state.isCreated = true;\n            this.options.onCreate(data);\n        } else {\n            this.options.onUpdate(data);\n        }\n    }\n\n    /**\n     * Helper used to know if the given modifier is enabled.\n     * @method\n     * @memberof Popper.Utils\n     * @returns {Boolean}\n     */\n    function isModifierEnabled(modifiers, modifierName) {\n        return modifiers.some(function (_ref) {\n            var name = _ref.name,\n                enabled = _ref.enabled;\n            return enabled && name === modifierName;\n        });\n    }\n\n    /**\n     * Get the prefixed supported property name\n     * @method\n     * @memberof Popper.Utils\n     * @argument {String} property (camelCase)\n     * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n     */\n    function getSupportedPropertyName(property) {\n        var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n        var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n        for (var i = 0; i < prefixes.length; i++) {\n            var prefix = prefixes[i];\n            var toCheck = prefix ? '' + prefix + upperProp : property;\n            if (typeof document.body.style[toCheck] !== 'undefined') {\n                return toCheck;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Destroys the popper.\n     * @method\n     * @memberof Popper\n     */\n    function destroy() {\n        this.state.isDestroyed = true;\n\n        // touch DOM only if `applyStyle` modifier is enabled\n        if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n            this.popper.removeAttribute('x-placement');\n            this.popper.style.position = '';\n            this.popper.style.top = '';\n            this.popper.style.left = '';\n            this.popper.style.right = '';\n            this.popper.style.bottom = '';\n            this.popper.style.willChange = '';\n            this.popper.style[getSupportedPropertyName('transform')] = '';\n        }\n\n        this.disableEventListeners();\n\n        // remove the popper if user explicity asked for the deletion on destroy\n        // do not use `remove` because IE11 doesn't support it\n        if (this.options.removeOnDestroy) {\n            this.popper.parentNode.removeChild(this.popper);\n        }\n        return this;\n    }\n\n    /**\n     * Get the window associated with the element\n     * @argument {Element} element\n     * @returns {Window}\n     */\n    function getWindow(element) {\n        var ownerDocument = element.ownerDocument;\n        return ownerDocument ? ownerDocument.defaultView : window;\n    }\n\n    function attachToScrollParents(scrollParent, event, callback, scrollParents) {\n        var isBody = scrollParent.nodeName === 'BODY';\n        var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n        target.addEventListener(event, callback, { passive: true });\n\n        if (!isBody) {\n            attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n        }\n        scrollParents.push(target);\n    }\n\n    /**\n     * Setup needed event listeners used to update the popper position\n     * @method\n     * @memberof Popper.Utils\n     * @private\n     */\n    function setupEventListeners(reference, options, state, updateBound) {\n        // Resize event listener on window\n        state.updateBound = updateBound;\n        getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n        // Scroll event listener on scroll parents\n        var scrollElement = getScrollParent(reference);\n        attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n        state.scrollElement = scrollElement;\n        state.eventsEnabled = true;\n\n        return state;\n    }\n\n    /**\n     * It will add resize/scroll events and start recalculating\n     * position of the popper element when they are triggered.\n     * @method\n     * @memberof Popper\n     */\n    function enableEventListeners() {\n        if (!this.state.eventsEnabled) {\n            this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n        }\n    }\n\n    /**\n     * Remove event listeners used to update the popper position\n     * @method\n     * @memberof Popper.Utils\n     * @private\n     */\n    function removeEventListeners(reference, state) {\n        // Remove resize event listener on window\n        getWindow(reference).removeEventListener('resize', state.updateBound);\n\n        // Remove scroll event listener on scroll parents\n        state.scrollParents.forEach(function (target) {\n            target.removeEventListener('scroll', state.updateBound);\n        });\n\n        // Reset state\n        state.updateBound = null;\n        state.scrollParents = [];\n        state.scrollElement = null;\n        state.eventsEnabled = false;\n        return state;\n    }\n\n    /**\n     * It will remove resize/scroll events and won't recalculate popper position\n     * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n     * unless you call `update` method manually.\n     * @method\n     * @memberof Popper\n     */\n    function disableEventListeners() {\n        if (this.state.eventsEnabled) {\n            cancelAnimationFrame(this.scheduleUpdate);\n            this.state = removeEventListeners(this.reference, this.state);\n        }\n    }\n\n    /**\n     * Tells if a given input is a number\n     * @method\n     * @memberof Popper.Utils\n     * @param {*} input to check\n     * @return {Boolean}\n     */\n    function isNumeric(n) {\n        return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    /**\n     * Set the style to the given popper\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element - Element to apply the style to\n     * @argument {Object} styles\n     * Object with a list of properties and values which will be applied to the element\n     */\n    function setStyles(element, styles) {\n        Object.keys(styles).forEach(function (prop) {\n            var unit = '';\n            // add unit if the value is numeric and is one of the following\n            if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n                unit = 'px';\n            }\n            element.style[prop] = styles[prop] + unit;\n        });\n    }\n\n    /**\n     * Set the attributes to the given popper\n     * @method\n     * @memberof Popper.Utils\n     * @argument {Element} element - Element to apply the attributes to\n     * @argument {Object} styles\n     * Object with a list of properties and values which will be applied to the element\n     */\n    function setAttributes(element, attributes) {\n        Object.keys(attributes).forEach(function (prop) {\n            var value = attributes[prop];\n            if (value !== false) {\n                element.setAttribute(prop, attributes[prop]);\n            } else {\n                element.removeAttribute(prop);\n            }\n        });\n    }\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @argument {Object} data.styles - List of style properties - values to apply to popper element\n     * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The same data object\n     */\n    function applyStyle(data) {\n        // any property present in `data.styles` will be applied to the popper,\n        // in this way we can make the 3rd party modifiers add custom styles to it\n        // Be aware, modifiers could override the properties defined in the previous\n        // lines of this modifier!\n        setStyles(data.instance.popper, data.styles);\n\n        // any property present in `data.attributes` will be applied to the popper,\n        // they will be set as HTML attributes of the element\n        setAttributes(data.instance.popper, data.attributes);\n\n        // if arrowElement is defined and arrowStyles has some properties\n        if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n            setStyles(data.arrowElement, data.arrowStyles);\n        }\n\n        return data;\n    }\n\n    /**\n     * Set the x-placement attribute before everything else because it could be used\n     * to add margins to the popper margins needs to be calculated to get the\n     * correct popper offsets.\n     * @method\n     * @memberof Popper.modifiers\n     * @param {HTMLElement} reference - The reference element used to position the popper\n     * @param {HTMLElement} popper - The HTML element used as popper\n     * @param {Object} options - Popper.js options\n     */\n    function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n        // compute reference element offsets\n        var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n        // compute auto placement, store placement inside the data object,\n        // modifiers will be able to edit `placement` if needed\n        // and refer to originalPlacement to know the original value\n        var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n        popper.setAttribute('x-placement', placement);\n\n        // Apply `position` to popper before anything else because\n        // without the position applied we can't guarantee correct computations\n        setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n        return options;\n    }\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The data object, properly modified\n     */\n    function computeStyle(data, options) {\n        var x = options.x,\n            y = options.y;\n        var popper = data.offsets.popper;\n\n        // Remove this legacy support in Popper.js v2\n\n        var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n            return modifier.name === 'applyStyle';\n        }).gpuAcceleration;\n        if (legacyGpuAccelerationOption !== undefined) {\n            console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n        }\n        var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n        var offsetParent = getOffsetParent(data.instance.popper);\n        var offsetParentRect = getBoundingClientRect(offsetParent);\n\n        // Styles\n        var styles = {\n            position: popper.position\n        };\n\n        // Avoid blurry text by using full pixel integers.\n        // For pixel-perfect positioning, top/bottom prefers rounded\n        // values, while left/right prefers floored values.\n        var offsets = {\n            left: Math.floor(popper.left),\n            top: Math.round(popper.top),\n            bottom: Math.round(popper.bottom),\n            right: Math.floor(popper.right)\n        };\n\n        var sideA = x === 'bottom' ? 'top' : 'bottom';\n        var sideB = y === 'right' ? 'left' : 'right';\n\n        // if gpuAcceleration is set to `true` and transform is supported,\n        //  we use `translate3d` to apply the position to the popper we\n        // automatically use the supported prefixed version if needed\n        var prefixedProperty = getSupportedPropertyName('transform');\n\n        // now, let's make a step back and look at this code closely (wtf?)\n        // If the content of the popper grows once it's been positioned, it\n        // may happen that the popper gets misplaced because of the new content\n        // overflowing its reference element\n        // To avoid this problem, we provide two options (x and y), which allow\n        // the consumer to define the offset origin.\n        // If we position a popper on top of a reference element, we can set\n        // `x` to `top` to make the popper grow towards its top instead of\n        // its bottom.\n        var left = void 0,\n            top = void 0;\n        if (sideA === 'bottom') {\n            // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n            // and not the bottom of the html element\n            if (offsetParent.nodeName === 'HTML') {\n                top = -offsetParent.clientHeight + offsets.bottom;\n            } else {\n                top = -offsetParentRect.height + offsets.bottom;\n            }\n        } else {\n            top = offsets.top;\n        }\n        if (sideB === 'right') {\n            if (offsetParent.nodeName === 'HTML') {\n                left = -offsetParent.clientWidth + offsets.right;\n            } else {\n                left = -offsetParentRect.width + offsets.right;\n            }\n        } else {\n            left = offsets.left;\n        }\n        if (gpuAcceleration && prefixedProperty) {\n            styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n            styles[sideA] = 0;\n            styles[sideB] = 0;\n            styles.willChange = 'transform';\n        } else {\n            // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n            var invertTop = sideA === 'bottom' ? -1 : 1;\n            var invertLeft = sideB === 'right' ? -1 : 1;\n            styles[sideA] = top * invertTop;\n            styles[sideB] = left * invertLeft;\n            styles.willChange = sideA + ', ' + sideB;\n        }\n\n        // Attributes\n        var attributes = {\n            'x-placement': data.placement\n        };\n\n        // Update `data` attributes, styles and arrowStyles\n        data.attributes = _extends({}, attributes, data.attributes);\n        data.styles = _extends({}, styles, data.styles);\n        data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n        return data;\n    }\n\n    /**\n     * Helper used to know if the given modifier depends from another one.<br />\n     * It checks if the needed modifier is listed and enabled.\n     * @method\n     * @memberof Popper.Utils\n     * @param {Array} modifiers - list of modifiers\n     * @param {String} requestingName - name of requesting modifier\n     * @param {String} requestedName - name of requested modifier\n     * @returns {Boolean}\n     */\n    function isModifierRequired(modifiers, requestingName, requestedName) {\n        var requesting = find(modifiers, function (_ref) {\n            var name = _ref.name;\n            return name === requestingName;\n        });\n\n        var isRequired = !!requesting && modifiers.some(function (modifier) {\n            return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n        });\n\n        if (!isRequired) {\n            var _requesting = '`' + requestingName + '`';\n            var requested = '`' + requestedName + '`';\n            console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n        }\n        return isRequired;\n    }\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by update method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The data object, properly modified\n     */\n    function arrow(data, options) {\n        var _data$offsets$arrow;\n\n        // arrow depends on keepTogether in order to work\n        if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n            return data;\n        }\n\n        var arrowElement = options.element;\n\n        // if arrowElement is a string, suppose it's a CSS selector\n        if (typeof arrowElement === 'string') {\n            arrowElement = data.instance.popper.querySelector(arrowElement);\n\n            // if arrowElement is not found, don't run the modifier\n            if (!arrowElement) {\n                return data;\n            }\n        } else {\n            // if the arrowElement isn't a query selector we must check that the\n            // provided DOM node is child of its popper node\n            if (!data.instance.popper.contains(arrowElement)) {\n                console.warn('WARNING: `arrow.element` must be child of its popper element!');\n                return data;\n            }\n        }\n\n        var placement = data.placement.split('-')[0];\n        var _data$offsets = data.offsets,\n            popper = _data$offsets.popper,\n            reference = _data$offsets.reference;\n\n        var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n        var len = isVertical ? 'height' : 'width';\n        var sideCapitalized = isVertical ? 'Top' : 'Left';\n        var side = sideCapitalized.toLowerCase();\n        var altSide = isVertical ? 'left' : 'top';\n        var opSide = isVertical ? 'bottom' : 'right';\n        var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n        //\n        // extends keepTogether behavior making sure the popper and its\n        // reference have enough pixels in conjunction\n        //\n\n        // top/left side\n        if (reference[opSide] - arrowElementSize < popper[side]) {\n            data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n        }\n        // bottom/right side\n        if (reference[side] + arrowElementSize > popper[opSide]) {\n            data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n        }\n        data.offsets.popper = getClientRect(data.offsets.popper);\n\n        // compute center of the popper\n        var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n        // Compute the sideValue using the updated popper offsets\n        // take popper margin in account because we don't have this info available\n        var css = getStyleComputedProperty(data.instance.popper);\n        var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n        var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n        var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n        // prevent arrowElement from being placed not contiguously to its popper\n        sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n        data.arrowElement = arrowElement;\n        data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n        return data;\n    }\n\n    /**\n     * Get the opposite placement variation of the given one\n     * @method\n     * @memberof Popper.Utils\n     * @argument {String} placement variation\n     * @returns {String} flipped placement variation\n     */\n    function getOppositeVariation(variation) {\n        if (variation === 'end') {\n            return 'start';\n        } else if (variation === 'start') {\n            return 'end';\n        }\n        return variation;\n    }\n\n    /**\n     * List of accepted placements to use as values of the `placement` option.<br />\n     * Valid placements are:\n     * - `auto`\n     * - `top`\n     * - `right`\n     * - `bottom`\n     * - `left`\n     *\n     * Each placement can have a variation from this list:\n     * - `-start`\n     * - `-end`\n     *\n     * Variations are interpreted easily if you think of them as the left to right\n     * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n     * is right.<br />\n     * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n     *\n     * Some valid examples are:\n     * - `top-end` (on top of reference, right aligned)\n     * - `right-start` (on right of reference, top aligned)\n     * - `bottom` (on bottom, centered)\n     * - `auto-end` (on the side with more space available, alignment depends by placement)\n     *\n     * @static\n     * @type {Array}\n     * @enum {String}\n     * @readonly\n     * @method placements\n     * @memberof Popper\n     */\n    var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\n    var validPlacements = placements.slice(3);\n\n    /**\n     * Given an initial placement, returns all the subsequent placements\n     * clockwise (or counter-clockwise).\n     *\n     * @method\n     * @memberof Popper.Utils\n     * @argument {String} placement - A valid placement (it accepts variations)\n     * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n     * @returns {Array} placements including their variations\n     */\n    function clockwise(placement) {\n        var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var index = validPlacements.indexOf(placement);\n        var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n        return counter ? arr.reverse() : arr;\n    }\n\n    var BEHAVIORS = {\n        FLIP: 'flip',\n        CLOCKWISE: 'clockwise',\n        COUNTERCLOCKWISE: 'counterclockwise'\n    };\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by update method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The data object, properly modified\n     */\n    function flip(data, options) {\n        // if `inner` modifier is enabled, we can't use the `flip` modifier\n        if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n            return data;\n        }\n\n        if (data.flipped && data.placement === data.originalPlacement) {\n            // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n            return data;\n        }\n\n        var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n        var placement = data.placement.split('-')[0];\n        var placementOpposite = getOppositePlacement(placement);\n        var variation = data.placement.split('-')[1] || '';\n\n        var flipOrder = [];\n\n        switch (options.behavior) {\n            case BEHAVIORS.FLIP:\n                flipOrder = [placement, placementOpposite];\n                break;\n            case BEHAVIORS.CLOCKWISE:\n                flipOrder = clockwise(placement);\n                break;\n            case BEHAVIORS.COUNTERCLOCKWISE:\n                flipOrder = clockwise(placement, true);\n                break;\n            default:\n                flipOrder = options.behavior;\n        }\n\n        flipOrder.forEach(function (step, index) {\n            if (placement !== step || flipOrder.length === index + 1) {\n                return data;\n            }\n\n            placement = data.placement.split('-')[0];\n            placementOpposite = getOppositePlacement(placement);\n\n            var popperOffsets = data.offsets.popper;\n            var refOffsets = data.offsets.reference;\n\n            // using floor because the reference offsets may contain decimals we are not going to consider here\n            var floor = Math.floor;\n            var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n            var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n            var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n            var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n            var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n            var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n            // flip the variation if required\n            var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n            var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n            if (overlapsRef || overflowsBoundaries || flippedVariation) {\n                // this boolean to detect any flip loop\n                data.flipped = true;\n\n                if (overlapsRef || overflowsBoundaries) {\n                    placement = flipOrder[index + 1];\n                }\n\n                if (flippedVariation) {\n                    variation = getOppositeVariation(variation);\n                }\n\n                data.placement = placement + (variation ? '-' + variation : '');\n\n                // this object contains `position`, we want to preserve it along with\n                // any additional property we may add in the future\n                data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n                data = runModifiers(data.instance.modifiers, data, 'flip');\n            }\n        });\n        return data;\n    }\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by update method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The data object, properly modified\n     */\n    function keepTogether(data) {\n        var _data$offsets = data.offsets,\n            popper = _data$offsets.popper,\n            reference = _data$offsets.reference;\n\n        var placement = data.placement.split('-')[0];\n        var floor = Math.floor;\n        var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n        var side = isVertical ? 'right' : 'bottom';\n        var opSide = isVertical ? 'left' : 'top';\n        var measurement = isVertical ? 'width' : 'height';\n\n        if (popper[side] < floor(reference[opSide])) {\n            data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n        }\n        if (popper[opSide] > floor(reference[side])) {\n            data.offsets.popper[opSide] = floor(reference[side]);\n        }\n\n        return data;\n    }\n\n    /**\n     * Converts a string containing value + unit into a px value number\n     * @function\n     * @memberof {modifiers~offset}\n     * @private\n     * @argument {String} str - Value + unit string\n     * @argument {String} measurement - `height` or `width`\n     * @argument {Object} popperOffsets\n     * @argument {Object} referenceOffsets\n     * @returns {Number|String}\n     * Value in pixels, or original string if no values were extracted\n     */\n    function toValue(str, measurement, popperOffsets, referenceOffsets) {\n        // separate value from unit\n        var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n        var value = +split[1];\n        var unit = split[2];\n\n        // If it's not a number it's an operator, I guess\n        if (!value) {\n            return str;\n        }\n\n        if (unit.indexOf('%') === 0) {\n            var element = void 0;\n            switch (unit) {\n                case '%p':\n                    element = popperOffsets;\n                    break;\n                case '%':\n                case '%r':\n                default:\n                    element = referenceOffsets;\n            }\n\n            var rect = getClientRect(element);\n            return rect[measurement] / 100 * value;\n        } else if (unit === 'vh' || unit === 'vw') {\n            // if is a vh or vw, we calculate the size based on the viewport\n            var size = void 0;\n            if (unit === 'vh') {\n                size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            } else {\n                size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n            }\n            return size / 100 * value;\n        } else {\n            // if is an explicit pixel unit, we get rid of the unit and keep the value\n            // if is an implicit unit, it's px, and we return just the value\n            return value;\n        }\n    }\n\n    /**\n     * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n     * @function\n     * @memberof {modifiers~offset}\n     * @private\n     * @argument {String} offset\n     * @argument {Object} popperOffsets\n     * @argument {Object} referenceOffsets\n     * @argument {String} basePlacement\n     * @returns {Array} a two cells array with x and y offsets in numbers\n     */\n    function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n        var offsets = [0, 0];\n\n        // Use height if placement is left or right and index is 0 otherwise use width\n        // in this way the first offset will use an axis and the second one\n        // will use the other one\n        var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n        // Split the offset string to obtain a list of values and operands\n        // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n        var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n            return frag.trim();\n        });\n\n        // Detect if the offset string contains a pair of values or a single one\n        // they could be separated by comma or space\n        var divider = fragments.indexOf(find(fragments, function (frag) {\n            return frag.search(/,|\\s/) !== -1;\n        }));\n\n        if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n            console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n        }\n\n        // If divider is found, we divide the list of values and operands to divide\n        // them by ofset X and Y.\n        var splitRegex = /\\s*,\\s*|\\s+/;\n        var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n        // Convert the values with units to absolute pixels to allow our computations\n        ops = ops.map(function (op, index) {\n            // Most of the units rely on the orientation of the popper\n            var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n            var mergeWithPrevious = false;\n            return op\n            // This aggregates any `+` or `-` sign that aren't considered operators\n            // e.g.: 10 + +5 => [10, +, +5]\n                .reduce(function (a, b) {\n                    if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n                        a[a.length - 1] = b;\n                        mergeWithPrevious = true;\n                        return a;\n                    } else if (mergeWithPrevious) {\n                        a[a.length - 1] += b;\n                        mergeWithPrevious = false;\n                        return a;\n                    } else {\n                        return a.concat(b);\n                    }\n                }, [])\n                // Here we convert the string values into number values (in px)\n                .map(function (str) {\n                    return toValue(str, measurement, popperOffsets, referenceOffsets);\n                });\n        });\n\n        // Loop trough the offsets arrays and execute the operations\n        ops.forEach(function (op, index) {\n            op.forEach(function (frag, index2) {\n                if (isNumeric(frag)) {\n                    offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n                }\n            });\n        });\n        return offsets;\n    }\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by update method\n     * @argument {Object} options - Modifiers configuration and options\n     * @argument {Number|String} options.offset=0\n     * The offset value as described in the modifier description\n     * @returns {Object} The data object, properly modified\n     */\n    function offset(data, _ref) {\n        var offset = _ref.offset;\n        var placement = data.placement,\n            _data$offsets = data.offsets,\n            popper = _data$offsets.popper,\n            reference = _data$offsets.reference;\n\n        var basePlacement = placement.split('-')[0];\n\n        var offsets = void 0;\n        if (isNumeric(+offset)) {\n            offsets = [+offset, 0];\n        } else {\n            offsets = parseOffset(offset, popper, reference, basePlacement);\n        }\n\n        if (basePlacement === 'left') {\n            popper.top += offsets[0];\n            popper.left -= offsets[1];\n        } else if (basePlacement === 'right') {\n            popper.top += offsets[0];\n            popper.left += offsets[1];\n        } else if (basePlacement === 'top') {\n            popper.left += offsets[0];\n            popper.top -= offsets[1];\n        } else if (basePlacement === 'bottom') {\n            popper.left += offsets[0];\n            popper.top += offsets[1];\n        }\n\n        data.popper = popper;\n        return data;\n    }\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The data object, properly modified\n     */\n    function preventOverflow(data, options) {\n        var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n        // If offsetParent is the reference element, we really want to\n        // go one step up and use the next offsetParent as reference to\n        // avoid to make this modifier completely useless and look like broken\n        if (data.instance.reference === boundariesElement) {\n            boundariesElement = getOffsetParent(boundariesElement);\n        }\n\n        // NOTE: DOM access here\n        // resets the popper's position so that the document size can be calculated excluding\n        // the size of the popper element itself\n        var transformProp = getSupportedPropertyName('transform');\n        var popperStyles = data.instance.popper.style; // assignment to help minification\n        var top = popperStyles.top,\n            left = popperStyles.left,\n            transform = popperStyles[transformProp];\n\n        popperStyles.top = '';\n        popperStyles.left = '';\n        popperStyles[transformProp] = '';\n\n        var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n        // NOTE: DOM access here\n        // restores the original style properties after the offsets have been computed\n        popperStyles.top = top;\n        popperStyles.left = left;\n        popperStyles[transformProp] = transform;\n\n        options.boundaries = boundaries;\n\n        var order = options.priority;\n        var popper = data.offsets.popper;\n\n        var check = {\n            primary: function primary(placement) {\n                var value = popper[placement];\n                if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n                    value = Math.max(popper[placement], boundaries[placement]);\n                }\n                return defineProperty({}, placement, value);\n            },\n            secondary: function secondary(placement) {\n                var mainSide = placement === 'right' ? 'left' : 'top';\n                var value = popper[mainSide];\n                if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n                    value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n                }\n                return defineProperty({}, mainSide, value);\n            }\n        };\n\n        order.forEach(function (placement) {\n            var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n            popper = _extends({}, popper, check[side](placement));\n        });\n\n        data.offsets.popper = popper;\n\n        return data;\n    }\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The data object, properly modified\n     */\n    function shift(data) {\n        var placement = data.placement;\n        var basePlacement = placement.split('-')[0];\n        var shiftvariation = placement.split('-')[1];\n\n        // if shift shiftvariation is specified, run the modifier\n        if (shiftvariation) {\n            var _data$offsets = data.offsets,\n                reference = _data$offsets.reference,\n                popper = _data$offsets.popper;\n\n            var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n            var side = isVertical ? 'left' : 'top';\n            var measurement = isVertical ? 'width' : 'height';\n\n            var shiftOffsets = {\n                start: defineProperty({}, side, reference[side]),\n                end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n            };\n\n            data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n        }\n\n        return data;\n    }\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by update method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The data object, properly modified\n     */\n    function hide(data) {\n        if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n            return data;\n        }\n\n        var refRect = data.offsets.reference;\n        var bound = find(data.instance.modifiers, function (modifier) {\n            return modifier.name === 'preventOverflow';\n        }).boundaries;\n\n        if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n            // Avoid unnecessary DOM access if visibility hasn't changed\n            if (data.hide === true) {\n                return data;\n            }\n\n            data.hide = true;\n            data.attributes['x-out-of-boundaries'] = '';\n        } else {\n            // Avoid unnecessary DOM access if visibility hasn't changed\n            if (data.hide === false) {\n                return data;\n            }\n\n            data.hide = false;\n            data.attributes['x-out-of-boundaries'] = false;\n        }\n\n        return data;\n    }\n\n    /**\n     * @function\n     * @memberof Modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {Object} The data object, properly modified\n     */\n    function inner(data) {\n        var placement = data.placement;\n        var basePlacement = placement.split('-')[0];\n        var _data$offsets = data.offsets,\n            popper = _data$offsets.popper,\n            reference = _data$offsets.reference;\n\n        var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n        var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n        popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n        data.placement = getOppositePlacement(placement);\n        data.offsets.popper = getClientRect(popper);\n\n        return data;\n    }\n\n    /**\n     * Modifier function, each modifier can have a function of this type assigned\n     * to its `fn` property.<br />\n     * These functions will be called on each update, this means that you must\n     * make sure they are performant enough to avoid performance bottlenecks.\n     *\n     * @function ModifierFn\n     * @argument {dataObject} data - The data object generated by `update` method\n     * @argument {Object} options - Modifiers configuration and options\n     * @returns {dataObject} The data object, properly modified\n     */\n\n    /**\n     * Modifiers are plugins used to alter the behavior of your poppers.<br />\n     * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n     * needed by the library.\n     *\n     * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n     * All the other properties are configurations that could be tweaked.\n     * @namespace modifiers\n     */\n    var modifiers = {\n        /**\n         * Modifier used to shift the popper on the start or end of its reference\n         * element.<br />\n         * It will read the variation of the `placement` property.<br />\n         * It can be one either `-end` or `-start`.\n         * @memberof modifiers\n         * @inner\n         */\n        shift: {\n            /** @prop {number} order=100 - Index used to define the order of execution */\n            order: 100,\n            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n            enabled: true,\n            /** @prop {ModifierFn} */\n            fn: shift\n        },\n\n        /**\n         * The `offset` modifier can shift your popper on both its axis.\n         *\n         * It accepts the following units:\n         * - `px` or unit-less, interpreted as pixels\n         * - `%` or `%r`, percentage relative to the length of the reference element\n         * - `%p`, percentage relative to the length of the popper element\n         * - `vw`, CSS viewport width unit\n         * - `vh`, CSS viewport height unit\n         *\n         * For length is intended the main axis relative to the placement of the popper.<br />\n         * This means that if the placement is `top` or `bottom`, the length will be the\n         * `width`. In case of `left` or `right`, it will be the `height`.\n         *\n         * You can provide a single value (as `Number` or `String`), or a pair of values\n         * as `String` divided by a comma or one (or more) white spaces.<br />\n         * The latter is a deprecated method because it leads to confusion and will be\n         * removed in v2.<br />\n         * Additionally, it accepts additions and subtractions between different units.\n         * Note that multiplications and divisions aren't supported.\n         *\n         * Valid examples are:\n         * ```\n         * 10\n         * '10%'\n         * '10, 10'\n         * '10%, 10'\n         * '10 + 10%'\n         * '10 - 5vh + 3%'\n         * '-10px + 5vh, 5px - 6%'\n         * ```\n         * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n         * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n         * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n         *\n         * @memberof modifiers\n         * @inner\n         */\n        offset: {\n            /** @prop {number} order=200 - Index used to define the order of execution */\n            order: 200,\n            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n            enabled: true,\n            /** @prop {ModifierFn} */\n            fn: offset,\n            /** @prop {Number|String} offset=0\n             * The offset value as described in the modifier description\n             */\n            offset: 0\n        },\n\n        /**\n         * Modifier used to prevent the popper from being positioned outside the boundary.\n         *\n         * A scenario exists where the reference itself is not within the boundaries.<br />\n         * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n         * In this case we need to decide whether the popper should either:\n         *\n         * - detach from the reference and remain \"trapped\" in the boundaries, or\n         * - if it should ignore the boundary and \"escape with its reference\"\n         *\n         * When `escapeWithReference` is set to`true` and reference is completely\n         * outside its boundaries, the popper will overflow (or completely leave)\n         * the boundaries in order to remain attached to the edge of the reference.\n         *\n         * @memberof modifiers\n         * @inner\n         */\n        preventOverflow: {\n            /** @prop {number} order=300 - Index used to define the order of execution */\n            order: 300,\n            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n            enabled: true,\n            /** @prop {ModifierFn} */\n            fn: preventOverflow,\n            /**\n             * @prop {Array} [priority=['left','right','top','bottom']]\n             * Popper will try to prevent overflow following these priorities by default,\n             * then, it could overflow on the left and on top of the `boundariesElement`\n             */\n            priority: ['left', 'right', 'top', 'bottom'],\n            /**\n             * @prop {number} padding=5\n             * Amount of pixel used to define a minimum distance between the boundaries\n             * and the popper. This makes sure the popper always has a little padding\n             * between the edges of its container\n             */\n            padding: 5,\n            /**\n             * @prop {String|HTMLElement} boundariesElement='scrollParent'\n             * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n             * `viewport` or any DOM element.\n             */\n            boundariesElement: 'scrollParent'\n        },\n\n        /**\n         * Modifier used to make sure the reference and its popper stay near each other\n         * without leaving any gap between the two. Especially useful when the arrow is\n         * enabled and you want to ensure that it points to its reference element.\n         * It cares only about the first axis. You can still have poppers with margin\n         * between the popper and its reference element.\n         * @memberof modifiers\n         * @inner\n         */\n        keepTogether: {\n            /** @prop {number} order=400 - Index used to define the order of execution */\n            order: 400,\n            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n            enabled: true,\n            /** @prop {ModifierFn} */\n            fn: keepTogether\n        },\n\n        /**\n         * This modifier is used to move the `arrowElement` of the popper to make\n         * sure it is positioned between the reference element and its popper element.\n         * It will read the outer size of the `arrowElement` node to detect how many\n         * pixels of conjunction are needed.\n         *\n         * It has no effect if no `arrowElement` is provided.\n         * @memberof modifiers\n         * @inner\n         */\n        arrow: {\n            /** @prop {number} order=500 - Index used to define the order of execution */\n            order: 500,\n            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n            enabled: true,\n            /** @prop {ModifierFn} */\n            fn: arrow,\n            /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n            element: '[x-arrow]'\n        },\n\n        /**\n         * Modifier used to flip the popper's placement when it starts to overlap its\n         * reference element.\n         *\n         * Requires the `preventOverflow` modifier before it in order to work.\n         *\n         * **NOTE:** this modifier will interrupt the current update cycle and will\n         * restart it if it detects the need to flip the placement.\n         * @memberof modifiers\n         * @inner\n         */\n        flip: {\n            /** @prop {number} order=600 - Index used to define the order of execution */\n            order: 600,\n            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n            enabled: true,\n            /** @prop {ModifierFn} */\n            fn: flip,\n            /**\n             * @prop {String|Array} behavior='flip'\n             * The behavior used to change the popper's placement. It can be one of\n             * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n             * placements (with optional variations)\n             */\n            behavior: 'flip',\n            /**\n             * @prop {number} padding=5\n             * The popper will flip if it hits the edges of the `boundariesElement`\n             */\n            padding: 5,\n            /**\n             * @prop {String|HTMLElement} boundariesElement='viewport'\n             * The element which will define the boundaries of the popper position.\n             * The popper will never be placed outside of the defined boundaries\n             * (except if `keepTogether` is enabled)\n             */\n            boundariesElement: 'viewport'\n        },\n\n        /**\n         * Modifier used to make the popper flow toward the inner of the reference element.\n         * By default, when this modifier is disabled, the popper will be placed outside\n         * the reference element.\n         * @memberof modifiers\n         * @inner\n         */\n        inner: {\n            /** @prop {number} order=700 - Index used to define the order of execution */\n            order: 700,\n            /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n            enabled: false,\n            /** @prop {ModifierFn} */\n            fn: inner\n        },\n\n        /**\n         * Modifier used to hide the popper when its reference element is outside of the\n         * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n         * be used to hide with a CSS selector the popper when its reference is\n         * out of boundaries.\n         *\n         * Requires the `preventOverflow` modifier before it in order to work.\n         * @memberof modifiers\n         * @inner\n         */\n        hide: {\n            /** @prop {number} order=800 - Index used to define the order of execution */\n            order: 800,\n            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n            enabled: true,\n            /** @prop {ModifierFn} */\n            fn: hide\n        },\n\n        /**\n         * Computes the style that will be applied to the popper element to gets\n         * properly positioned.\n         *\n         * Note that this modifier will not touch the DOM, it just prepares the styles\n         * so that `applyStyle` modifier can apply it. This separation is useful\n         * in case you need to replace `applyStyle` with a custom implementation.\n         *\n         * This modifier has `850` as `order` value to maintain backward compatibility\n         * with previous versions of Popper.js. Expect the modifiers ordering method\n         * to change in future major versions of the library.\n         *\n         * @memberof modifiers\n         * @inner\n         */\n        computeStyle: {\n            /** @prop {number} order=850 - Index used to define the order of execution */\n            order: 850,\n            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n            enabled: true,\n            /** @prop {ModifierFn} */\n            fn: computeStyle,\n            /**\n             * @prop {Boolean} gpuAcceleration=true\n             * If true, it uses the CSS 3D transformation to position the popper.\n             * Otherwise, it will use the `top` and `left` properties\n             */\n            gpuAcceleration: true,\n            /**\n             * @prop {string} [x='bottom']\n             * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n             * Change this if your popper should grow in a direction different from `bottom`\n             */\n            x: 'bottom',\n            /**\n             * @prop {string} [x='left']\n             * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n             * Change this if your popper should grow in a direction different from `right`\n             */\n            y: 'right'\n        },\n\n        /**\n         * Applies the computed styles to the popper element.\n         *\n         * All the DOM manipulations are limited to this modifier. This is useful in case\n         * you want to integrate Popper.js inside a framework or view library and you\n         * want to delegate all the DOM manipulations to it.\n         *\n         * Note that if you disable this modifier, you must make sure the popper element\n         * has its position set to `absolute` before Popper.js can do its work!\n         *\n         * Just disable this modifier and define your own to achieve the desired effect.\n         *\n         * @memberof modifiers\n         * @inner\n         */\n        applyStyle: {\n            /** @prop {number} order=900 - Index used to define the order of execution */\n            order: 900,\n            /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n            enabled: true,\n            /** @prop {ModifierFn} */\n            fn: applyStyle,\n            /** @prop {Function} */\n            onLoad: applyStyleOnLoad,\n            /**\n             * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n             * @prop {Boolean} gpuAcceleration=true\n             * If true, it uses the CSS 3D transformation to position the popper.\n             * Otherwise, it will use the `top` and `left` properties\n             */\n            gpuAcceleration: undefined\n        }\n    };\n\n    /**\n     * The `dataObject` is an object containing all the information used by Popper.js.\n     * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n     * @name dataObject\n     * @property {Object} data.instance The Popper.js instance\n     * @property {String} data.placement Placement applied to popper\n     * @property {String} data.originalPlacement Placement originally defined on init\n     * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n     * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n     * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n     * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n     * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n     * @property {Object} data.boundaries Offsets of the popper boundaries\n     * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n     * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n     * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n     * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n     */\n\n    /**\n     * Default options provided to Popper.js constructor.<br />\n     * These can be overridden using the `options` argument of Popper.js.<br />\n     * To override an option, simply pass an object with the same\n     * structure of the `options` object, as the 3rd argument. For example:\n     * ```\n     * new Popper(ref, pop, {\n     *   modifiers: {\n     *     preventOverflow: { enabled: false }\n     *   }\n     * })\n     * ```\n     * @type {Object}\n     * @static\n     * @memberof Popper\n     */\n    var Defaults = {\n        /**\n         * Popper's placement.\n         * @prop {Popper.placements} placement='bottom'\n         */\n        placement: 'bottom',\n\n        /**\n         * Set this to true if you want popper to position it self in 'fixed' mode\n         * @prop {Boolean} positionFixed=false\n         */\n        positionFixed: false,\n\n        /**\n         * Whether events (resize, scroll) are initially enabled.\n         * @prop {Boolean} eventsEnabled=true\n         */\n        eventsEnabled: true,\n\n        /**\n         * Set to true if you want to automatically remove the popper when\n         * you call the `destroy` method.\n         * @prop {Boolean} removeOnDestroy=false\n         */\n        removeOnDestroy: false,\n\n        /**\n         * Callback called when the popper is created.<br />\n         * By default, it is set to no-op.<br />\n         * Access Popper.js instance with `data.instance`.\n         * @prop {onCreate}\n         */\n        onCreate: function onCreate() {},\n\n        /**\n         * Callback called when the popper is updated. This callback is not called\n         * on the initialization/creation of the popper, but only on subsequent\n         * updates.<br />\n         * By default, it is set to no-op.<br />\n         * Access Popper.js instance with `data.instance`.\n         * @prop {onUpdate}\n         */\n        onUpdate: function onUpdate() {},\n\n        /**\n         * List of modifiers used to modify the offsets before they are applied to the popper.\n         * They provide most of the functionalities of Popper.js.\n         * @prop {modifiers}\n         */\n        modifiers: modifiers\n    };\n\n    /**\n     * @callback onCreate\n     * @param {dataObject} data\n     */\n\n    /**\n     * @callback onUpdate\n     * @param {dataObject} data\n     */\n\n// Utils\n// Methods\n    var Popper = function () {\n        /**\n         * Creates a new Popper.js instance.\n         * @class Popper\n         * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n         * @param {HTMLElement} popper - The HTML element used as the popper\n         * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n         * @return {Object} instance - The generated Popper.js instance\n         */\n        function Popper(reference, popper) {\n            var _this = this;\n\n            var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n            classCallCheck(this, Popper);\n\n            this.scheduleUpdate = function () {\n                return requestAnimationFrame(_this.update);\n            };\n\n            // make update() debounced, so that it only runs at most once-per-tick\n            this.update = debounce(this.update.bind(this));\n\n            // with {} we create a new object with the options inside it\n            this.options = _extends({}, Popper.Defaults, options);\n\n            // init state\n            this.state = {\n                isDestroyed: false,\n                isCreated: false,\n                scrollParents: []\n            };\n\n            // get reference and popper elements (allow jQuery wrappers)\n            this.reference = reference && reference.jquery ? reference[0] : reference;\n            this.popper = popper && popper.jquery ? popper[0] : popper;\n\n            // Deep merge modifiers options\n            this.options.modifiers = {};\n            Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n                _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n            });\n\n            // Refactoring modifiers' list (Object => Array)\n            this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n                return _extends({\n                    name: name\n                }, _this.options.modifiers[name]);\n            })\n            // sort the modifiers by order\n                .sort(function (a, b) {\n                    return a.order - b.order;\n                });\n\n            // modifiers have the ability to execute arbitrary code when Popper.js get inited\n            // such code is executed in the same order of its modifier\n            // they could add new properties to their options configuration\n            // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n            this.modifiers.forEach(function (modifierOptions) {\n                if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n                    modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n                }\n            });\n\n            // fire the first update to position the popper in the right place\n            this.update();\n\n            var eventsEnabled = this.options.eventsEnabled;\n            if (eventsEnabled) {\n                // setup event listeners, they will take care of update the position in specific situations\n                this.enableEventListeners();\n            }\n\n            this.state.eventsEnabled = eventsEnabled;\n        }\n\n        // We can't use class properties because they don't get listed in the\n        // class prototype and break stuff like Sinon stubs\n\n\n        createClass(Popper, [{\n            key: 'update',\n            value: function update$$1() {\n                return update.call(this);\n            }\n        }, {\n            key: 'destroy',\n            value: function destroy$$1() {\n                return destroy.call(this);\n            }\n        }, {\n            key: 'enableEventListeners',\n            value: function enableEventListeners$$1() {\n                return enableEventListeners.call(this);\n            }\n        }, {\n            key: 'disableEventListeners',\n            value: function disableEventListeners$$1() {\n                return disableEventListeners.call(this);\n            }\n\n            /**\n             * Schedules an update. It will run on the next UI update available.\n             * @method scheduleUpdate\n             * @memberof Popper\n             */\n\n\n            /**\n             * Collection of utilities useful when writing custom modifiers.\n             * Starting from version 1.7, this method is available only if you\n             * include `popper-utils.js` before `popper.js`.\n             *\n             * **DEPRECATION**: This way to access PopperUtils is deprecated\n             * and will be removed in v2! Use the PopperUtils module directly instead.\n             * Due to the high instability of the methods contained in Utils, we can't\n             * guarantee them to follow semver. Use them at your own risk!\n             * @static\n             * @private\n             * @type {Object}\n             * @deprecated since version 1.8\n             * @member Utils\n             * @memberof Popper\n             */\n\n        }]);\n        return Popper;\n    }();\n\n    /**\n     * The `referenceObject` is an object that provides an interface compatible with Popper.js\n     * and lets you use it as replacement of a real DOM node.<br />\n     * You can use this method to position a popper relatively to a set of coordinates\n     * in case you don't have a DOM node to use as reference.\n     *\n     * ```\n     * new Popper(referenceObject, popperNode);\n     * ```\n     *\n     * NB: This feature isn't supported in Internet Explorer 10.\n     * @name referenceObject\n     * @property {Function} data.getBoundingClientRect\n     * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n     * @property {number} data.clientWidth\n     * An ES6 getter that will return the width of the virtual reference element.\n     * @property {number} data.clientHeight\n     * An ES6 getter that will return the height of the virtual reference element.\n     */\n\n\n    Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n    Popper.placements = placements;\n    Popper.Defaults = Defaults;\n\n    return Popper;\n\n})));\n"]},"metadata":{},"sourceType":"module"}