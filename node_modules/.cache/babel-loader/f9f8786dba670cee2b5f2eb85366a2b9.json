{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar toastr = require(\"toastr\");\n\nvar time = 5000;\ntoastr.options = {\n  closeButton: true,\n  debug: false,\n  newestOnTop: true,\n  progressBar: false,\n  positionClass: 'toast-top-right',\n  preventDuplicates: false,\n  onclick: null,\n  showDuration: 300,\n  hideDuration: 500,\n  timeOut: time,\n  extendedTimeOut: '1000',\n  showEasing: 'swing',\n  hideEasing: 'linear',\n  showMethod: 'fadeIn',\n  hideMethod: 'fadeOut'\n};\nvar notifications = document.getElementById('notifications');\n\nif (notifications !== null) {\n  var notificationsData = JSON.parse(notifications.dataset.notifications);\n  notificationsData.map(function (notification, index) {\n    toastr.options = _objectSpread(_objectSpread({}, toastr.options), {}, {\n      timeOut: time\n    });\n    time += 500;\n\n    if (notification[0] === 'alert') {\n      toastr.warning(notification[1]);\n    } else if (notification[0] === 'notice') {\n      toastr.info(notification[1]);\n    }\n  });\n}\n\nexport { toastr };","map":{"version":3,"sources":["/Users/alejandrorodriguez/Documents/Develop/credits_valuation/app/javascript/packs/notifications.js"],"names":["toastr","require","time","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","notifications","document","getElementById","notificationsData","JSON","parse","dataset","map","notification","index","warning","info"],"mappings":";;;;;;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIC,IAAI,GAAG,IAAX;AACAF,MAAM,CAACG,OAAP,GAAiB;AACbC,EAAAA,WAAW,EAAE,IADA;AAEbC,EAAAA,KAAK,EAAE,KAFM;AAGbC,EAAAA,WAAW,EAAE,IAHA;AAIbC,EAAAA,WAAW,EAAE,KAJA;AAKbC,EAAAA,aAAa,EAAE,iBALF;AAMbC,EAAAA,iBAAiB,EAAE,KANN;AAObC,EAAAA,OAAO,EAAE,IAPI;AAQbC,EAAAA,YAAY,EAAE,GARD;AASbC,EAAAA,YAAY,EAAE,GATD;AAUbC,EAAAA,OAAO,EAAEX,IAVI;AAWbY,EAAAA,eAAe,EAAE,MAXJ;AAYbC,EAAAA,UAAU,EAAE,OAZC;AAabC,EAAAA,UAAU,EAAE,QAbC;AAcbC,EAAAA,UAAU,EAAE,QAdC;AAebC,EAAAA,UAAU,EAAE;AAfC,CAAjB;AAkBA,IAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAApB;;AACA,IAAIF,aAAa,KAAK,IAAtB,EAA4B;AACxB,MAAIG,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWL,aAAa,CAACM,OAAd,CAAsBN,aAAjC,CAAxB;AACAG,EAAAA,iBAAiB,CAACI,GAAlB,CAAsB,UAACC,YAAD,EAAeC,KAAf,EAAyB;AAC3C5B,IAAAA,MAAM,CAACG,OAAP,mCACKH,MAAM,CAACG,OADZ;AAEEU,MAAAA,OAAO,EAAEX;AAFX;AAIAA,IAAAA,IAAI,IAAI,GAAR;;AACA,QAAIyB,YAAY,CAAC,CAAD,CAAZ,KAAoB,OAAxB,EAAiC;AAC7B3B,MAAAA,MAAM,CAAC6B,OAAP,CAAeF,YAAY,CAAC,CAAD,CAA3B;AACH,KAFD,MAEO,IAAIA,YAAY,CAAC,CAAD,CAAZ,KAAoB,QAAxB,EAAkC;AACrC3B,MAAAA,MAAM,CAAC8B,IAAP,CAAYH,YAAY,CAAC,CAAD,CAAxB;AACH;AACJ,GAXD;AAYH;;AAED,SAAS3B,MAAT","sourcesContent":["let toastr = require(\"toastr\");\n\nlet time = 5000;\ntoastr.options = {\n    closeButton: true,\n    debug: false,\n    newestOnTop: true,\n    progressBar: false,\n    positionClass: 'toast-top-right',\n    preventDuplicates: false,\n    onclick: null,\n    showDuration: 300,\n    hideDuration: 500,\n    timeOut: time,\n    extendedTimeOut: '1000',\n    showEasing: 'swing',\n    hideEasing: 'linear',\n    showMethod: 'fadeIn',\n    hideMethod: 'fadeOut'\n};\n\nlet notifications = document.getElementById('notifications');\nif (notifications !== null) {\n    let notificationsData = JSON.parse(notifications.dataset.notifications);\n    notificationsData.map((notification, index) => {\n        toastr.options = {\n          ...toastr.options,\n          timeOut: time,\n        };\n        time += 500;\n        if (notification[0] === 'alert') {\n            toastr.warning(notification[1]);\n        } else if (notification[0] === 'notice') {\n            toastr.info(notification[1]);\n        }\n    });\n}\n\nexport { toastr };\n"]},"metadata":{},"sourceType":"module"}