{"ast":null,"code":"/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.3.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('javascripts/popper')) : typeof define === 'function' && define.amd ? define(['popper.js'], factory) : global.Tooltip = factory(global.Popper);\n})(this, function (Popper) {\n  'use strict';\n\n  Popper = Popper && Popper.hasOwnProperty('default') ? Popper['default'] : Popper;\n  /**\n   * Check if the given variable is a function\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Any} functionToCheck - variable to check\n   * @returns {Boolean} answer to: is a function?\n   */\n\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n  }\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var DEFAULT_OPTIONS = {\n    container: false,\n    delay: 0,\n    html: false,\n    placement: 'top',\n    title: '',\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    offset: 0,\n    arrowSelector: '.tooltip-arrow, .tooltip__arrow',\n    innerSelector: '.tooltip-inner, .tooltip__inner'\n  };\n\n  var Tooltip = function () {\n    /**\n     * Create a new Tooltip.js instance\n     * @class Tooltip\n     * @param {HTMLElement} reference - The DOM node used as reference of the tooltip (it can be a jQuery element).\n     * @param {Object} options\n     * @param {String} options.placement='top'\n     *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),\n     *      left(-start, -end)`\n     * @param {String} options.arrowSelector='.tooltip-arrow, .tooltip__arrow' - className used to locate the DOM arrow element in the tooltip.\n     * @param {String} options.innerSelector='.tooltip-inner, .tooltip__inner' - className used to locate the DOM inner element in the tooltip.\n     * @param {HTMLElement|String|false} options.container=false - Append the tooltip to a specific element.\n     * @param {Number|Object} options.delay=0\n     *      Delay showing and hiding the tooltip (ms) - does not apply to manual trigger type.\n     *      If a number is supplied, delay is applied to both hide/show.\n     *      Object structure is: `{ show: 500, hide: 100 }`\n     * @param {Boolean} options.html=false - Insert HTML into the tooltip. If false, the content will inserted with `textContent`.\n     * @param {String} [options.template='<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>']\n     *      Base HTML to used when creating the tooltip.\n     *      The tooltip's `title` will be injected into the `.tooltip-inner` or `.tooltip__inner`.\n     *      `.tooltip-arrow` or `.tooltip__arrow` will become the tooltip's arrow.\n     *      The outermost wrapper element should have the `.tooltip` class.\n     * @param {String|HTMLElement|TitleFunction} options.title='' - Default title value if `title` attribute isn't present.\n     * @param {String} [options.trigger='hover focus']\n     *      How tooltip is triggered - click, hover, focus, manual.\n     *      You may pass multiple triggers; separate them with a space. `manual` cannot be combined with any other trigger.\n     * @param {Boolean} options.closeOnClickOutside=false - Close a popper on click outside of the popper and reference element. This has effect only when options.trigger is 'click'.\n     * @param {String|HTMLElement} options.boundariesElement\n     *      The element used as boundaries for the tooltip. For more information refer to Popper.js'\n     *      [boundariesElement docs](https://popper.js.org/popper-documentation.html)\n     * @param {Number|String} options.offset=0 - Offset of the tooltip relative to its reference. For more information refer to Popper.js'\n     *      [offset docs](https://popper.js.org/popper-documentation.html)\n     * @param {Object} options.popperOptions={} - Popper options, will be passed directly to popper instance. For more information refer to Popper.js'\n     *      [options docs](https://popper.js.org/popper-documentation.html)\n     * @return {Object} instance - The generated tooltip instance\n     */\n    function Tooltip(reference, options) {\n      classCallCheck(this, Tooltip);\n\n      _initialiseProps.call(this); // apply user options over default ones\n\n\n      options = _extends({}, DEFAULT_OPTIONS, options);\n      reference.jquery && (reference = reference[0]); // cache reference and options\n\n      this.reference = reference;\n      this.options = options; // get events list\n\n      var events = typeof options.trigger === 'string' ? options.trigger.split(' ').filter(function (trigger) {\n        return ['click', 'hover', 'focus'].indexOf(trigger) !== -1;\n      }) : []; // set initial state\n\n      this._isOpen = false;\n      this._popperOptions = {}; // set event listeners\n\n      this._setEventListeners(reference, events, options);\n    } //\n    // Public methods\n    //\n\n    /**\n     * Reveals an element's tooltip. This is considered a \"manual\" triggering of the tooltip.\n     * Tooltips with zero-length titles are never displayed.\n     * @method Tooltip#show\n     * @memberof Tooltip\n     */\n\n    /**\n     * Hides an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     * @method Tooltip#hide\n     * @memberof Tooltip\n     */\n\n    /**\n     * Hides and destroys an element’s tooltip.\n     * @method Tooltip#dispose\n     * @memberof Tooltip\n     */\n\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     * @method Tooltip#toggle\n     * @memberof Tooltip\n     */\n\n    /**\n     * Updates the tooltip's title content\n     * @method Tooltip#updateTitleContent\n     * @memberof Tooltip\n     * @param {String|HTMLElement} title - The new content to use for the title\n     */\n    //\n    // Private methods\n    //\n\n\n    createClass(Tooltip, [{\n      key: '_create',\n\n      /**\n       * Creates a new tooltip node\n       * @memberof Tooltip\n       * @private\n       * @param {HTMLElement} reference\n       * @param {String} template\n       * @param {String|HTMLElement|TitleFunction} title\n       * @param {Boolean} allowHtml\n       * @return {HTMLElement} tooltipNode\n       */\n      value: function _create(reference, template, title, allowHtml) {\n        // create tooltip element\n        var tooltipGenerator = window.document.createElement('div');\n        tooltipGenerator.innerHTML = template.trim();\n        var tooltipNode = tooltipGenerator.childNodes[0]; // add unique ID to our tooltip (needed for accessibility reasons)\n\n        tooltipNode.id = 'tooltip_' + Math.random().toString(36).substr(2, 10); // set initial `aria-hidden` state to `false` (it's visible!)\n\n        tooltipNode.setAttribute('aria-hidden', 'false'); // add title to tooltip\n\n        var titleNode = tooltipGenerator.querySelector(this.options.innerSelector);\n\n        this._addTitleContent(reference, title, allowHtml, titleNode); // return the generated tooltip node\n\n\n        return tooltipNode;\n      }\n    }, {\n      key: '_addTitleContent',\n      value: function _addTitleContent(reference, title, allowHtml, titleNode) {\n        if (title.nodeType === 1 || title.nodeType === 11) {\n          // if title is a element node or document fragment, append it only if allowHtml is true\n          allowHtml && titleNode.appendChild(title);\n        } else if (isFunction(title)) {\n          // if title is a function, call it and set textContent or innerHtml depending by `allowHtml` value\n          var titleText = title.call(reference);\n          allowHtml ? titleNode.innerHTML = titleText : titleNode.textContent = titleText;\n        } else {\n          // if it's just a simple text, set textContent or innerHtml depending by `allowHtml` value\n          allowHtml ? titleNode.innerHTML = title : titleNode.textContent = title;\n        }\n      }\n    }, {\n      key: '_show',\n      value: function _show(reference, options) {\n        // don't show if it's already visible\n        // or if it's not being showed\n        if (this._isOpen && !this._isOpening) {\n          return this;\n        }\n\n        this._isOpen = true; // if the tooltipNode already exists, just show it\n\n        if (this._tooltipNode) {\n          this._tooltipNode.style.visibility = 'visible';\n\n          this._tooltipNode.setAttribute('aria-hidden', 'false');\n\n          this.popperInstance.update();\n          return this;\n        } // get title\n\n\n        var title = reference.getAttribute('title') || options.title; // don't show tooltip if no title is defined\n\n        if (!title) {\n          return this;\n        } // create tooltip node\n\n\n        var tooltipNode = this._create(reference, options.template, title, options.html); // Add `aria-describedby` to our reference element for accessibility reasons\n\n\n        reference.setAttribute('aria-describedby', tooltipNode.id); // append tooltip to container\n\n        var container = this._findContainer(options.container, reference);\n\n        this._append(tooltipNode, container);\n\n        this._popperOptions = _extends({}, options.popperOptions, {\n          placement: options.placement\n        });\n        this._popperOptions.modifiers = _extends({}, this._popperOptions.modifiers, {\n          arrow: {\n            element: this.options.arrowSelector\n          },\n          offset: {\n            offset: options.offset\n          }\n        });\n\n        if (options.boundariesElement) {\n          this._popperOptions.modifiers.preventOverflow = {\n            boundariesElement: options.boundariesElement\n          };\n        }\n\n        this.popperInstance = new Popper(reference, tooltipNode, this._popperOptions);\n        this._tooltipNode = tooltipNode;\n        return this;\n      }\n    }, {\n      key: '_hide',\n      value: function _hide()\n      /*reference, options*/\n      {\n        // don't hide if it's already hidden\n        if (!this._isOpen) {\n          return this;\n        }\n\n        this._isOpen = false; // hide tooltipNode\n\n        this._tooltipNode.style.visibility = 'hidden';\n\n        this._tooltipNode.setAttribute('aria-hidden', 'true');\n\n        return this;\n      }\n    }, {\n      key: '_dispose',\n      value: function _dispose() {\n        var _this = this; // remove event listeners first to prevent any unexpected behaviour\n\n\n        this._events.forEach(function (_ref) {\n          var func = _ref.func,\n              event = _ref.event;\n\n          _this.reference.removeEventListener(event, func);\n        });\n\n        this._events = [];\n\n        if (this._tooltipNode) {\n          this._hide(); // destroy instance\n\n\n          this.popperInstance.destroy(); // destroy tooltipNode if removeOnDestroy is not set, as popperInstance.destroy() already removes the element\n\n          if (!this.popperInstance.options.removeOnDestroy) {\n            this._tooltipNode.parentNode.removeChild(this._tooltipNode);\n\n            this._tooltipNode = null;\n          }\n        }\n\n        return this;\n      }\n    }, {\n      key: '_findContainer',\n      value: function _findContainer(container, reference) {\n        // if container is a query, get the relative element\n        if (typeof container === 'string') {\n          container = window.document.querySelector(container);\n        } else if (container === false) {\n          // if container is `false`, set it to reference parent\n          container = reference.parentNode;\n        }\n\n        return container;\n      }\n      /**\n       * Append tooltip to container\n       * @memberof Tooltip\n       * @private\n       * @param {HTMLElement} tooltipNode\n       * @param {HTMLElement|String|false} container\n       */\n\n    }, {\n      key: '_append',\n      value: function _append(tooltipNode, container) {\n        container.appendChild(tooltipNode);\n      }\n    }, {\n      key: '_setEventListeners',\n      value: function _setEventListeners(reference, events, options) {\n        var _this2 = this;\n\n        var directEvents = [];\n        var oppositeEvents = [];\n        events.forEach(function (event) {\n          switch (event) {\n            case 'hover':\n              directEvents.push('mouseenter');\n              oppositeEvents.push('mouseleave');\n              break;\n\n            case 'focus':\n              directEvents.push('focus');\n              oppositeEvents.push('blur');\n              break;\n\n            case 'click':\n              directEvents.push('click');\n              oppositeEvents.push('click');\n              break;\n          }\n        }); // schedule show tooltip\n\n        directEvents.forEach(function (event) {\n          var func = function func(evt) {\n            if (_this2._isOpening === true) {\n              return;\n            }\n\n            evt.usedByTooltip = true;\n\n            _this2._scheduleShow(reference, options.delay, options, evt);\n          };\n\n          _this2._events.push({\n            event: event,\n            func: func\n          });\n\n          reference.addEventListener(event, func);\n        }); // schedule hide tooltip\n\n        oppositeEvents.forEach(function (event) {\n          var func = function func(evt) {\n            if (evt.usedByTooltip === true) {\n              return;\n            }\n\n            _this2._scheduleHide(reference, options.delay, options, evt);\n          };\n\n          _this2._events.push({\n            event: event,\n            func: func\n          });\n\n          reference.addEventListener(event, func);\n\n          if (event === 'click' && options.closeOnClickOutside) {\n            document.addEventListener('mousedown', function (e) {\n              if (!_this2._isOpening) {\n                return;\n              }\n\n              var popper = _this2.popperInstance.popper;\n\n              if (reference.contains(e.target) || popper.contains(e.target)) {\n                return;\n              }\n\n              func(e);\n            }, true);\n          }\n        });\n      }\n    }, {\n      key: '_scheduleShow',\n      value: function _scheduleShow(reference, delay, options\n      /*, evt */\n      ) {\n        var _this3 = this;\n\n        this._isOpening = true; // defaults to 0\n\n        var computedDelay = delay && delay.show || delay || 0;\n        this._showTimeout = window.setTimeout(function () {\n          return _this3._show(reference, options);\n        }, computedDelay);\n      }\n    }, {\n      key: '_scheduleHide',\n      value: function _scheduleHide(reference, delay, options, evt) {\n        var _this4 = this;\n\n        this._isOpening = false; // defaults to 0\n\n        var computedDelay = delay && delay.hide || delay || 0;\n        window.setTimeout(function () {\n          window.clearTimeout(_this4._showTimeout);\n\n          if (_this4._isOpen === false) {\n            return;\n          }\n\n          if (!document.body.contains(_this4._tooltipNode)) {\n            return;\n          } // if we are hiding because of a mouseleave, we must check that the new\n          // reference isn't the tooltip, because in this case we don't want to hide it\n\n\n          if (evt.type === 'mouseleave') {\n            var isSet = _this4._setTooltipNodeEvent(evt, reference, delay, options); // if we set the new event, don't hide the tooltip yet\n            // the new event will take care to hide it if necessary\n\n\n            if (isSet) {\n              return;\n            }\n          }\n\n          _this4._hide(reference, options);\n        }, computedDelay);\n      }\n    }, {\n      key: '_updateTitleContent',\n      value: function _updateTitleContent(title) {\n        if (typeof this._tooltipNode === 'undefined') {\n          if (typeof this.options.title !== 'undefined') {\n            this.options.title = title;\n          }\n\n          return;\n        }\n\n        var titleNode = this._tooltipNode.parentNode.querySelector(this.options.innerSelector);\n\n        this._clearTitleContent(titleNode, this.options.html, this.reference.getAttribute('title') || this.options.title);\n\n        this._addTitleContent(this.reference, title, this.options.html, titleNode);\n\n        this.options.title = title;\n        this.popperInstance.update();\n      }\n    }, {\n      key: '_clearTitleContent',\n      value: function _clearTitleContent(titleNode, allowHtml, lastTitle) {\n        if (lastTitle.nodeType === 1 || lastTitle.nodeType === 11) {\n          allowHtml && titleNode.removeChild(lastTitle);\n        } else {\n          allowHtml ? titleNode.innerHTML = '' : titleNode.textContent = '';\n        }\n      }\n    }]);\n    return Tooltip;\n  }();\n  /**\n   * Title function, its context is the Tooltip instance.\n   * @memberof Tooltip\n   * @callback TitleFunction\n   * @return {String} placement - The desired title.\n   */\n\n\n  var _initialiseProps = function _initialiseProps() {\n    var _this5 = this;\n\n    this.show = function () {\n      return _this5._show(_this5.reference, _this5.options);\n    };\n\n    this.hide = function () {\n      return _this5._hide();\n    };\n\n    this.dispose = function () {\n      return _this5._dispose();\n    };\n\n    this.toggle = function () {\n      if (_this5._isOpen) {\n        return _this5.hide();\n      } else {\n        return _this5.show();\n      }\n    };\n\n    this.updateTitleContent = function (title) {\n      return _this5._updateTitleContent(title);\n    };\n\n    this._events = [];\n\n    this._setTooltipNodeEvent = function (evt, reference, delay, options) {\n      var relatedreference = evt.relatedreference || evt.toElement || evt.relatedTarget;\n\n      var callback = function callback(evt2) {\n        var relatedreference2 = evt2.relatedreference || evt2.toElement || evt2.relatedTarget; // Remove event listener after call\n\n        _this5._tooltipNode.removeEventListener(evt.type, callback); // If the new reference is not the reference element\n\n\n        if (!reference.contains(relatedreference2)) {\n          // Schedule to hide tooltip\n          _this5._scheduleHide(reference, options.delay, options, evt2);\n        }\n      };\n\n      if (_this5._tooltipNode.contains(relatedreference)) {\n        // listen to mouseleave on the tooltip element to be able to hide the tooltip\n        _this5._tooltipNode.addEventListener(evt.type, callback);\n\n        return true;\n      }\n\n      return false;\n    };\n  };\n\n  return Tooltip;\n});","map":{"version":3,"sources":["/Users/vponce/Desarrollos/credits_factor_global/vendor/assets/javascripts/tooltip.js"],"names":["global","factory","exports","module","require","define","amd","Tooltip","Popper","hasOwnProperty","isFunction","functionToCheck","getType","toString","call","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_extends","assign","arguments","source","DEFAULT_OPTIONS","container","delay","html","placement","title","template","trigger","offset","arrowSelector","innerSelector","reference","options","_initialiseProps","jquery","events","split","filter","indexOf","_isOpen","_popperOptions","_setEventListeners","value","_create","allowHtml","tooltipGenerator","window","document","createElement","innerHTML","trim","tooltipNode","childNodes","id","Math","random","substr","setAttribute","titleNode","querySelector","_addTitleContent","nodeType","appendChild","titleText","textContent","_show","_isOpening","_tooltipNode","style","visibility","popperInstance","update","getAttribute","_findContainer","_append","popperOptions","modifiers","arrow","element","boundariesElement","preventOverflow","_hide","_dispose","_this","_events","forEach","_ref","func","event","removeEventListener","destroy","removeOnDestroy","parentNode","removeChild","_this2","directEvents","oppositeEvents","push","evt","usedByTooltip","_scheduleShow","addEventListener","_scheduleHide","closeOnClickOutside","e","popper","contains","_this3","computedDelay","show","_showTimeout","setTimeout","_this4","hide","clearTimeout","body","type","isSet","_setTooltipNodeEvent","_updateTitleContent","_clearTitleContent","lastTitle","_this5","dispose","toggle","updateTitleContent","relatedreference","toElement","relatedTarget","callback","evt2","relatedreference2"],"mappings":"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","sourcesContent":["/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.3.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('javascripts/popper')) :\n\ttypeof define === 'function' && define.amd ? define(['popper.js'], factory) :\n\t(global.Tooltip = factory(global.Popper));\n}(this, (function (Popper) { 'use strict';\n\nPopper = Popper && Popper.hasOwnProperty('default') ? Popper['default'] : Popper;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar DEFAULT_OPTIONS = {\n  container: false,\n  delay: 0,\n  html: false,\n  placement: 'top',\n  title: '',\n  template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n  trigger: 'hover focus',\n  offset: 0,\n  arrowSelector: '.tooltip-arrow, .tooltip__arrow',\n  innerSelector: '.tooltip-inner, .tooltip__inner'\n};\n\nvar Tooltip = function () {\n  /**\n   * Create a new Tooltip.js instance\n   * @class Tooltip\n   * @param {HTMLElement} reference - The DOM node used as reference of the tooltip (it can be a jQuery element).\n   * @param {Object} options\n   * @param {String} options.placement='top'\n   *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),\n   *      left(-start, -end)`\n   * @param {String} options.arrowSelector='.tooltip-arrow, .tooltip__arrow' - className used to locate the DOM arrow element in the tooltip.\n   * @param {String} options.innerSelector='.tooltip-inner, .tooltip__inner' - className used to locate the DOM inner element in the tooltip.\n   * @param {HTMLElement|String|false} options.container=false - Append the tooltip to a specific element.\n   * @param {Number|Object} options.delay=0\n   *      Delay showing and hiding the tooltip (ms) - does not apply to manual trigger type.\n   *      If a number is supplied, delay is applied to both hide/show.\n   *      Object structure is: `{ show: 500, hide: 100 }`\n   * @param {Boolean} options.html=false - Insert HTML into the tooltip. If false, the content will inserted with `textContent`.\n   * @param {String} [options.template='<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>']\n   *      Base HTML to used when creating the tooltip.\n   *      The tooltip's `title` will be injected into the `.tooltip-inner` or `.tooltip__inner`.\n   *      `.tooltip-arrow` or `.tooltip__arrow` will become the tooltip's arrow.\n   *      The outermost wrapper element should have the `.tooltip` class.\n   * @param {String|HTMLElement|TitleFunction} options.title='' - Default title value if `title` attribute isn't present.\n   * @param {String} [options.trigger='hover focus']\n   *      How tooltip is triggered - click, hover, focus, manual.\n   *      You may pass multiple triggers; separate them with a space. `manual` cannot be combined with any other trigger.\n   * @param {Boolean} options.closeOnClickOutside=false - Close a popper on click outside of the popper and reference element. This has effect only when options.trigger is 'click'.\n   * @param {String|HTMLElement} options.boundariesElement\n   *      The element used as boundaries for the tooltip. For more information refer to Popper.js'\n   *      [boundariesElement docs](https://popper.js.org/popper-documentation.html)\n   * @param {Number|String} options.offset=0 - Offset of the tooltip relative to its reference. For more information refer to Popper.js'\n   *      [offset docs](https://popper.js.org/popper-documentation.html)\n   * @param {Object} options.popperOptions={} - Popper options, will be passed directly to popper instance. For more information refer to Popper.js'\n   *      [options docs](https://popper.js.org/popper-documentation.html)\n   * @return {Object} instance - The generated tooltip instance\n   */\n  function Tooltip(reference, options) {\n    classCallCheck(this, Tooltip);\n\n    _initialiseProps.call(this);\n\n    // apply user options over default ones\n    options = _extends({}, DEFAULT_OPTIONS, options);\n\n    reference.jquery && (reference = reference[0]);\n\n    // cache reference and options\n    this.reference = reference;\n    this.options = options;\n\n    // get events list\n    var events = typeof options.trigger === 'string' ? options.trigger.split(' ').filter(function (trigger) {\n      return ['click', 'hover', 'focus'].indexOf(trigger) !== -1;\n    }) : [];\n\n    // set initial state\n    this._isOpen = false;\n    this._popperOptions = {};\n\n    // set event listeners\n    this._setEventListeners(reference, events, options);\n  }\n\n  //\n  // Public methods\n  //\n\n  /**\n   * Reveals an element's tooltip. This is considered a \"manual\" triggering of the tooltip.\n   * Tooltips with zero-length titles are never displayed.\n   * @method Tooltip#show\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Hides an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n   * @method Tooltip#hide\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Hides and destroys an element’s tooltip.\n   * @method Tooltip#dispose\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n   * @method Tooltip#toggle\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Updates the tooltip's title content\n   * @method Tooltip#updateTitleContent\n   * @memberof Tooltip\n   * @param {String|HTMLElement} title - The new content to use for the title\n   */\n\n\n  //\n  // Private methods\n  //\n\n  createClass(Tooltip, [{\n    key: '_create',\n\n\n    /**\n     * Creates a new tooltip node\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} reference\n     * @param {String} template\n     * @param {String|HTMLElement|TitleFunction} title\n     * @param {Boolean} allowHtml\n     * @return {HTMLElement} tooltipNode\n     */\n    value: function _create(reference, template, title, allowHtml) {\n      // create tooltip element\n      var tooltipGenerator = window.document.createElement('div');\n      tooltipGenerator.innerHTML = template.trim();\n      var tooltipNode = tooltipGenerator.childNodes[0];\n\n      // add unique ID to our tooltip (needed for accessibility reasons)\n      tooltipNode.id = 'tooltip_' + Math.random().toString(36).substr(2, 10);\n\n      // set initial `aria-hidden` state to `false` (it's visible!)\n      tooltipNode.setAttribute('aria-hidden', 'false');\n\n      // add title to tooltip\n      var titleNode = tooltipGenerator.querySelector(this.options.innerSelector);\n      this._addTitleContent(reference, title, allowHtml, titleNode);\n\n      // return the generated tooltip node\n      return tooltipNode;\n    }\n  }, {\n    key: '_addTitleContent',\n    value: function _addTitleContent(reference, title, allowHtml, titleNode) {\n      if (title.nodeType === 1 || title.nodeType === 11) {\n        // if title is a element node or document fragment, append it only if allowHtml is true\n        allowHtml && titleNode.appendChild(title);\n      } else if (isFunction(title)) {\n        // if title is a function, call it and set textContent or innerHtml depending by `allowHtml` value\n        var titleText = title.call(reference);\n        allowHtml ? titleNode.innerHTML = titleText : titleNode.textContent = titleText;\n      } else {\n        // if it's just a simple text, set textContent or innerHtml depending by `allowHtml` value\n        allowHtml ? titleNode.innerHTML = title : titleNode.textContent = title;\n      }\n    }\n  }, {\n    key: '_show',\n    value: function _show(reference, options) {\n      // don't show if it's already visible\n      // or if it's not being showed\n      if (this._isOpen && !this._isOpening) {\n        return this;\n      }\n      this._isOpen = true;\n\n      // if the tooltipNode already exists, just show it\n      if (this._tooltipNode) {\n        this._tooltipNode.style.visibility = 'visible';\n        this._tooltipNode.setAttribute('aria-hidden', 'false');\n        this.popperInstance.update();\n        return this;\n      }\n\n      // get title\n      var title = reference.getAttribute('title') || options.title;\n\n      // don't show tooltip if no title is defined\n      if (!title) {\n        return this;\n      }\n\n      // create tooltip node\n      var tooltipNode = this._create(reference, options.template, title, options.html);\n\n      // Add `aria-describedby` to our reference element for accessibility reasons\n      reference.setAttribute('aria-describedby', tooltipNode.id);\n\n      // append tooltip to container\n      var container = this._findContainer(options.container, reference);\n\n      this._append(tooltipNode, container);\n\n      this._popperOptions = _extends({}, options.popperOptions, {\n        placement: options.placement\n      });\n\n      this._popperOptions.modifiers = _extends({}, this._popperOptions.modifiers, {\n        arrow: {\n          element: this.options.arrowSelector\n        },\n        offset: {\n          offset: options.offset\n        }\n      });\n\n      if (options.boundariesElement) {\n        this._popperOptions.modifiers.preventOverflow = {\n          boundariesElement: options.boundariesElement\n        };\n      }\n\n      this.popperInstance = new Popper(reference, tooltipNode, this._popperOptions);\n\n      this._tooltipNode = tooltipNode;\n\n      return this;\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() /*reference, options*/{\n      // don't hide if it's already hidden\n      if (!this._isOpen) {\n        return this;\n      }\n\n      this._isOpen = false;\n\n      // hide tooltipNode\n      this._tooltipNode.style.visibility = 'hidden';\n      this._tooltipNode.setAttribute('aria-hidden', 'true');\n\n      return this;\n    }\n  }, {\n    key: '_dispose',\n    value: function _dispose() {\n      var _this = this;\n\n      // remove event listeners first to prevent any unexpected behaviour\n      this._events.forEach(function (_ref) {\n        var func = _ref.func,\n            event = _ref.event;\n\n        _this.reference.removeEventListener(event, func);\n      });\n      this._events = [];\n\n      if (this._tooltipNode) {\n        this._hide();\n\n        // destroy instance\n        this.popperInstance.destroy();\n\n        // destroy tooltipNode if removeOnDestroy is not set, as popperInstance.destroy() already removes the element\n        if (!this.popperInstance.options.removeOnDestroy) {\n          this._tooltipNode.parentNode.removeChild(this._tooltipNode);\n          this._tooltipNode = null;\n        }\n      }\n      return this;\n    }\n  }, {\n    key: '_findContainer',\n    value: function _findContainer(container, reference) {\n      // if container is a query, get the relative element\n      if (typeof container === 'string') {\n        container = window.document.querySelector(container);\n      } else if (container === false) {\n        // if container is `false`, set it to reference parent\n        container = reference.parentNode;\n      }\n      return container;\n    }\n\n    /**\n     * Append tooltip to container\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} tooltipNode\n     * @param {HTMLElement|String|false} container\n     */\n\n  }, {\n    key: '_append',\n    value: function _append(tooltipNode, container) {\n      container.appendChild(tooltipNode);\n    }\n  }, {\n    key: '_setEventListeners',\n    value: function _setEventListeners(reference, events, options) {\n      var _this2 = this;\n\n      var directEvents = [];\n      var oppositeEvents = [];\n\n      events.forEach(function (event) {\n        switch (event) {\n          case 'hover':\n            directEvents.push('mouseenter');\n            oppositeEvents.push('mouseleave');\n            break;\n          case 'focus':\n            directEvents.push('focus');\n            oppositeEvents.push('blur');\n            break;\n          case 'click':\n            directEvents.push('click');\n            oppositeEvents.push('click');\n            break;\n        }\n      });\n\n      // schedule show tooltip\n      directEvents.forEach(function (event) {\n        var func = function func(evt) {\n          if (_this2._isOpening === true) {\n            return;\n          }\n          evt.usedByTooltip = true;\n          _this2._scheduleShow(reference, options.delay, options, evt);\n        };\n        _this2._events.push({ event: event, func: func });\n        reference.addEventListener(event, func);\n      });\n\n      // schedule hide tooltip\n      oppositeEvents.forEach(function (event) {\n        var func = function func(evt) {\n          if (evt.usedByTooltip === true) {\n            return;\n          }\n          _this2._scheduleHide(reference, options.delay, options, evt);\n        };\n        _this2._events.push({ event: event, func: func });\n        reference.addEventListener(event, func);\n        if (event === 'click' && options.closeOnClickOutside) {\n          document.addEventListener('mousedown', function (e) {\n            if (!_this2._isOpening) {\n              return;\n            }\n            var popper = _this2.popperInstance.popper;\n            if (reference.contains(e.target) || popper.contains(e.target)) {\n              return;\n            }\n            func(e);\n          }, true);\n        }\n      });\n    }\n  }, {\n    key: '_scheduleShow',\n    value: function _scheduleShow(reference, delay, options /*, evt */) {\n      var _this3 = this;\n\n      this._isOpening = true;\n      // defaults to 0\n      var computedDelay = delay && delay.show || delay || 0;\n      this._showTimeout = window.setTimeout(function () {\n        return _this3._show(reference, options);\n      }, computedDelay);\n    }\n  }, {\n    key: '_scheduleHide',\n    value: function _scheduleHide(reference, delay, options, evt) {\n      var _this4 = this;\n\n      this._isOpening = false;\n      // defaults to 0\n      var computedDelay = delay && delay.hide || delay || 0;\n      window.setTimeout(function () {\n        window.clearTimeout(_this4._showTimeout);\n        if (_this4._isOpen === false) {\n          return;\n        }\n        if (!document.body.contains(_this4._tooltipNode)) {\n          return;\n        }\n\n        // if we are hiding because of a mouseleave, we must check that the new\n        // reference isn't the tooltip, because in this case we don't want to hide it\n        if (evt.type === 'mouseleave') {\n          var isSet = _this4._setTooltipNodeEvent(evt, reference, delay, options);\n\n          // if we set the new event, don't hide the tooltip yet\n          // the new event will take care to hide it if necessary\n          if (isSet) {\n            return;\n          }\n        }\n\n        _this4._hide(reference, options);\n      }, computedDelay);\n    }\n  }, {\n    key: '_updateTitleContent',\n    value: function _updateTitleContent(title) {\n      if (typeof this._tooltipNode === 'undefined') {\n        if (typeof this.options.title !== 'undefined') {\n          this.options.title = title;\n        }\n        return;\n      }\n      var titleNode = this._tooltipNode.parentNode.querySelector(this.options.innerSelector);\n      this._clearTitleContent(titleNode, this.options.html, this.reference.getAttribute('title') || this.options.title);\n      this._addTitleContent(this.reference, title, this.options.html, titleNode);\n      this.options.title = title;\n      this.popperInstance.update();\n    }\n  }, {\n    key: '_clearTitleContent',\n    value: function _clearTitleContent(titleNode, allowHtml, lastTitle) {\n      if (lastTitle.nodeType === 1 || lastTitle.nodeType === 11) {\n        allowHtml && titleNode.removeChild(lastTitle);\n      } else {\n        allowHtml ? titleNode.innerHTML = '' : titleNode.textContent = '';\n      }\n    }\n  }]);\n  return Tooltip;\n}();\n\n/**\n * Title function, its context is the Tooltip instance.\n * @memberof Tooltip\n * @callback TitleFunction\n * @return {String} placement - The desired title.\n */\n\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this5 = this;\n\n  this.show = function () {\n    return _this5._show(_this5.reference, _this5.options);\n  };\n\n  this.hide = function () {\n    return _this5._hide();\n  };\n\n  this.dispose = function () {\n    return _this5._dispose();\n  };\n\n  this.toggle = function () {\n    if (_this5._isOpen) {\n      return _this5.hide();\n    } else {\n      return _this5.show();\n    }\n  };\n\n  this.updateTitleContent = function (title) {\n    return _this5._updateTitleContent(title);\n  };\n\n  this._events = [];\n\n  this._setTooltipNodeEvent = function (evt, reference, delay, options) {\n    var relatedreference = evt.relatedreference || evt.toElement || evt.relatedTarget;\n\n    var callback = function callback(evt2) {\n      var relatedreference2 = evt2.relatedreference || evt2.toElement || evt2.relatedTarget;\n\n      // Remove event listener after call\n      _this5._tooltipNode.removeEventListener(evt.type, callback);\n\n      // If the new reference is not the reference element\n      if (!reference.contains(relatedreference2)) {\n        // Schedule to hide tooltip\n        _this5._scheduleHide(reference, options.delay, options, evt2);\n      }\n    };\n\n    if (_this5._tooltipNode.contains(relatedreference)) {\n      // listen to mouseleave on the tooltip element to be able to hide the tooltip\n      _this5._tooltipNode.addEventListener(evt.type, callback);\n      return true;\n    }\n\n    return false;\n  };\n};\n\nreturn Tooltip;\n\n})));\n"]},"metadata":{},"sourceType":"module"}